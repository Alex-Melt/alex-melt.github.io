{
    "version": "https://jsonfeed.org/version/1",
    "title": "melt • All posts by \"git\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/Hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/",
            "url": "http://example.com/Hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/",
            "title": "Hexo静态博客",
            "date_published": "2022-08-28T15:13:37.345Z",
            "content_html": "<h2 id=\"使用介绍\"><a class=\"markdownIt-Anchor\" href=\"#使用介绍\">#</a> 使用介绍</h2>\n<p>个人博客框架 hexo, 托管于 GitHub，博客网站使用 Github 自带的 Page<s> 或者 netlify 生成，国内访问采用 cloudflare 进行 CDN 加速</s></p>\n<span id=\"more\"></span>\n<h2 id=\"hexo框架\"><a class=\"markdownIt-Anchor\" href=\"#hexo框架\">#</a> hexo 框架</h2>\n<p><em>介绍：基于 nodejs 的静态博客网站生成器，支持 <code>markdown</code>  语法，能够快速生成静态 html</em></p>\n<blockquote>\n<p>安装 Git</p>\n</blockquote>\n<ul>\n<li>详解：</li>\n<li><strong>后序所有命令可以使用 Git Bash 完成</strong></li>\n</ul>\n<blockquote>\n<p>安装 Node.js</p>\n</blockquote>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==\">https://nodejs.org/en/</span> ，<strong>默认安装稳定版</strong></p>\n</li>\n<li>\n<p>修改安装路径</p>\n</li>\n<li>\n<p>默认添加 Path 环境变量，若无则自行添加～～F:\\environment\\NodeJs~~</p>\n</li>\n<li>\n<p>检测安装是否完成</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cmd打开命令行，使用命令查看是否安装完成</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>node <span class=\"token operator\">-</span>v\t\t<span class=\"token comment\">#查看 node 版本信息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>npm <span class=\"token operator\">-</span>v\t\t<span class=\"token comment\">#查看 npm 版本信息</span></pre></td></tr></table></figure></li>\n<li>\n<p>可以更换镜像下载源</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#打开 cmd 使用命令</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#查看原来的源</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>npm config get registry</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>https<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>registry<span class=\"token punctuation\">.</span>npmjs<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#修改为淘宝源</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>npm config <span class=\"token builtin\">set</span> registry https<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>registry<span class=\"token punctuation\">.</span>npm<span class=\"token punctuation\">.</span>taobao<span class=\"token punctuation\">.</span>org</pre></td></tr></table></figure></li>\n<li>\n<p>出现问题</p>\n<ul>\n<li>更新 npm</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>npm update <span class=\"token operator\">-</span>g</pre></td></tr></table></figure><ul>\n<li>没有修改权限</li>\n</ul>\n<pre><code>#问题\nnpm WARN config global `--global`, `--local` are deprecated. Use `--location\n\n#解决办法\n打开nodejs文件夹。并打开两个文件 npm.cmd 和 npm\n找到那2个文件里面的prefix -g替换为prefix --location=global\n(如果提示，要更新到相对应的版本)\n</code></pre>\n<ul>\n<li>node 目录权限不够</li>\n</ul>\n<pre><code>#问题\nC:\\Users\\admin&gt;npm -v\nnpm WARN logfile could not create logs-dir: Error: EPERM: operation not permitted, mkdir 'C:\\Program Files\\nodejs\\node_cache\\_logs'\nnpm WARN logfile could not be created: Error: ENOENT: no such file or directory, open 'C:\\Program Files\\nodejs\\node_cache\\_logs\\2022-07-07T01_23_05_078Z-debug-0.log'\nnpm WARN logfile could not create logs-dir: Error: EPERM: operation not permitted, mkdir 'C:\\Program Files\\nodejs\\node_cache\\_logs'\nnpm WARN logfile could not be created: Error: ENOENT: no such file or directory, open 'C:\\Program Files\\nodejs\\node_cache\\_logs\\2022-07-07T01_23_05_505Z-debug-0.log'\n\n#结局办法\n对安装的Node.js文件夹进行权限的修改，全部勾选为√\n</code></pre>\n<p><img data-src=\"/images/image/Hexo/Hexo-01.png\" alt=\"Hexo-01\"></p>\n<p><img data-src=\"/images/image/Hexo/Hexo-02.png\" alt=\"Hexo-02\"></p>\n</li>\n</ul>\n<blockquote>\n<p>npm 配置</p>\n</blockquote>\n<ul>\n<li>简介：npm 是 JavaScript 运行时环境 Node.js 的默认包管理器，用于管理依赖包的下载与卸载</li>\n<li>检查 npm 的路径</li>\n</ul>\n<pre><code>#使用命令查看位置(默认在c盘)\nnpm config get prefix\nnpm config get cache\n\n#建议修改到其他盘\n在Node.js文件下创建node_cache文件夹\n使用命令：\nnpm config set prefix &quot;F:\\environment\\NodeJs&quot;\nnpm config set cache &quot;F:\\environment\\NodeJs\\node_cache&quot;\n</code></pre>\n<p><img data-src=\"/images/image/Hexo/Hexo-03.png\" alt=\"Hexo-03\"></p>\n<h2 id=\"注意万分重要\"><a class=\"markdownIt-Anchor\" href=\"#注意万分重要\">#</a> <em>注意 (万分重要！！！)</em></h2>\n<p>在对后序所有地方修改时都需要注意：空格</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#所有地方的空格不可省略，包括 md 上传的文件中配置信息</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>eg<span class=\"token punctuation\">:</span>\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin\">type</span><span class=\"token punctuation\">:</span> git</pre></td></tr></table></figure><blockquote>\n<p>安装 hexo</p>\n</blockquote>\n<pre><code>npm install hexo -g #-g表示全局安装, npm默认为当前项目安装\n</code></pre>\n<blockquote>\n<p>hexo 基本命令</p>\n</blockquote>\n<pre><code>npm update hexo -g  #升级 \nhexo init &lt;folder&gt;  #执行init命令初始化hexo到你指定的目录\nhexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章\nhexo generate       #自动根据当前目录下文件,生成静态网页 hexo g\nhexo server         #运行本地服务 hexo s\nhexo clean          #清理\nhexo deploy         #部署 hexo d\n\nhexo server         #Hexo会监视文件变动并自动更新，无须重启服务器\nhexo server -s      #静态模式\nhexo server -p 5000 #更改端口\nhexo server -i 192.168.1.1 #自定义 IP\n</code></pre>\n<h2 id=\"初始化\"><a class=\"markdownIt-Anchor\" href=\"#初始化\">#</a> 初始化</h2>\n<blockquote>\n<p>方式一：</p>\n</blockquote>\n<ul>\n<li>选择合适的位置创建博客所在位置 ，假设创建的文件夹为：blog</li>\n<li><strong>进入该文件夹</strong></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#先初始化，此时文件夹内必须为空</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo init</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#若初始化成功则显示</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>INFO Cloning hexo<span class=\"token operator\">-</span>starter <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>INFO Start blogging <span class=\"token keyword\">with</span> Hexo!</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#此步骤：若初始化后没有 node_modules, 则需要添加依赖</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>npm install  <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>g<span class=\"token punctuation\">)</span>  \t<span class=\"token operator\">//</span>添加依赖</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#初始化 git</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>git init</pre></td></tr></table></figure><blockquote>\n<p>方式二：</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#先初始化，此时文件夹内必须为空</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo init <span class=\"token string\">\"你的博客目录名称\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#若初始化成功则显示</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>INFO Cloning hexo<span class=\"token operator\">-</span>starter <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>INFO Start blogging <span class=\"token keyword\">with</span> Hexo!</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#进入博客目录</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>cd <span class=\"token string\">\"博客目录\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#安装依赖</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>npm install</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#初始化 git</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>git init</pre></td></tr></table></figure><blockquote>\n<p>执行命令后生成的文件</p>\n</blockquote>\n<ul>\n<li>_config.yml\n<ul>\n<li>全局配置文件，例如网站的名称，副标题，描述，作者，语言，主题等</li>\n</ul>\n</li>\n<li>scaffolds\n<ul>\n<li>骨架文件，生成新页面或者新博客的模板，当 <code>hexo</code>  生成新博客时，会在这里初始化</li>\n</ul>\n</li>\n<li>source\n<ul>\n<li>存放 <code>markdown</code>  源文件，，里面的 <code>_post</code>  文件夹也就是笔记存放的位置</li>\n</ul>\n</li>\n<li>themes\n<ul>\n<li>网站主题目录，可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy8lRTQlQjglOEIlRTYlODklQkUlRTUlODglQjAlRTclOUIlQjglRTUlODUlQjMlRTQlQjglQkIlRTklQTIlOTg=\">https://hexo.io/themes/ 下找到相关主题</span></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>生成文章</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo new post <span class=\"token string\">\"test\"</span> <span class=\"token comment\">#测试用，会在 source/_post/ 下生成 test.md 文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#生成静态 Html 文件在 /public</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>hexo generate</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#本地运行 server 服务</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>hexo server</pre></td></tr></table></figure><h2 id=\"博客配置\"><a class=\"markdownIt-Anchor\" href=\"#博客配置\">#</a> 博客配置</h2>\n<ul>\n<li>\n<p>_config.yml 配置</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Site</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title<span class=\"token punctuation\">:</span> Alex\t\t\t<span class=\"token comment\">#网站标题</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>subtitle<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\t\t<span class=\"token comment\">#网站副标题</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>description<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\t\t<span class=\"token comment\">#网站描述</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>keywords<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>author<span class=\"token punctuation\">:</span> 赵浩栋\t\t\t<span class=\"token comment\">#作者\t</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>language<span class=\"token punctuation\">:</span> en\t\t  <span class=\"token comment\">#语言</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>timezone<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\t\t  <span class=\"token comment\">#网站时区，默认使用电脑自带时区</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># URL</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>url<span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>example<span class=\"token punctuation\">.</span>com\t\t<span class=\"token comment\">#站点 Url</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>permalink<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>year<span class=\"token operator\">/</span><span class=\"token punctuation\">:</span>month<span class=\"token operator\">/</span><span class=\"token punctuation\">:</span>day<span class=\"token operator\">/</span><span class=\"token punctuation\">:</span>title<span class=\"token operator\">/</span>\t<span class=\"token comment\">#文章的 永久链接格式</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>permalink_defaults<span class=\"token punctuation\">:</span>\t\t\t\t\t\t<span class=\"token comment\">#永久链接中的默认值</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>pretty_urls<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  trailing_index<span class=\"token punctuation\">:</span> true <span class=\"token comment\"># Set to false to remove trailing 'index.html' from permalinks</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  trailing_html<span class=\"token punctuation\">:</span> true <span class=\"token comment\"># Set to false to remove trailing '.html' from permalinks</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># Directory</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>source_dir<span class=\"token punctuation\">:</span> source\t\t\t\t\t\t<span class=\"token comment\">#资源文件夹，用来存放 `.md` 源文件</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>public_dir<span class=\"token punctuation\">:</span> public\t\t\t\t\t\t<span class=\"token comment\">#公共文件夹，用于存放生成的站点文件</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>tag_dir<span class=\"token punctuation\">:</span> tags\t\t\t\t\t\t\t<span class=\"token comment\">#标签文件夹</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>archive_dir<span class=\"token punctuation\">:</span> archives\t\t\t\t\t<span class=\"token comment\">#归档文件夹</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>category_dir<span class=\"token punctuation\">:</span> categories\t\t\t\t<span class=\"token comment\">#分类文件夹</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>code_dir<span class=\"token punctuation\">:</span> downloads<span class=\"token operator\">/</span>code</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>i18n_dir<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>lang\t\t\t\t\t\t\t<span class=\"token comment\">#国际化文件夹</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>skip_render<span class=\"token punctuation\">:</span> README<span class=\"token punctuation\">.</span>md\t\t\t\t\t<span class=\"token comment\">#用来指定跳过渲染的文件，</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># Writing</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>new_post_name<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>title<span class=\"token punctuation\">.</span>md \t\t\t\t<span class=\"token comment\">#新文件的文件名称，与 md 中的 title 编辑对应</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>default_layout<span class=\"token punctuation\">:</span> post\t\t\t\t\t<span class=\"token comment\">#预设布局</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>titlecase<span class=\"token punctuation\">:</span> false \t\t\t\t\t\t<span class=\"token comment\"># Transform title into titlecase</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>external_link<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  enable<span class=\"token punctuation\">:</span> true <span class=\"token comment\"># Open external links in new tab</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  field<span class=\"token punctuation\">:</span> site <span class=\"token comment\"># Apply to the whole site</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  exclude<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>filename_case<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\t\t\t\t\t\t<span class=\"token comment\">#把文件名转化为 1 小写，2 大写</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>render_drafts<span class=\"token punctuation\">:</span> false\t\t\t\t\t<span class=\"token comment\">#是否显示草稿</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>post_asset_folder<span class=\"token punctuation\">:</span> false\t\t\t\t<span class=\"token comment\">#是否启动 Asset 文件夹</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>relative_link<span class=\"token punctuation\">:</span> false\t\t\t\t\t<span class=\"token comment\">#把链接改为与根目录的相对位置</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>future<span class=\"token punctuation\">:</span> true\t\t\t\t\t\t\t<span class=\"token comment\">#显示未来的文章</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>highlight<span class=\"token punctuation\">:</span>\t\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  enable<span class=\"token punctuation\">:</span> true\t\t\t\t\t\t\t<span class=\"token comment\">#代码块中的高亮限制</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  line_number<span class=\"token punctuation\">:</span> true\t\t\t\t\t\t<span class=\"token comment\">#显示行数</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  auto_detect<span class=\"token punctuation\">:</span> false\t\t\t\t\t<span class=\"token comment\">#如果未指定语言，则启动自动检测</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  tab_replace<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\t\t\t\t\t\t<span class=\"token comment\">#用 n 个空格替换 tabs，如果值为空，则不会替换</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  wrap<span class=\"token punctuation\">:</span> true</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  hljs<span class=\"token punctuation\">:</span> false</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>prismjs<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  enable<span class=\"token punctuation\">:</span> false</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  preprocess<span class=\"token punctuation\">:</span> true</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  line_number<span class=\"token punctuation\">:</span> true</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  tab_replace<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># Home page setting</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># path: Root path for your blogs index page. (default = '')</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\"># per_page: Posts displayed per page. (0 = disable pagination)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\"># order_by: Posts order. (Order by date descending by default)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>index_generator<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  path<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  per_page<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  order_by<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>date</pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\"># Category &amp; Tag</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>default_category<span class=\"token punctuation\">:</span> uncategorized</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>category_map<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>tag_map<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token comment\"># Metadata elements</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token comment\">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>meta_generator<span class=\"token punctuation\">:</span> true</pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>date_format<span class=\"token punctuation\">:</span> YYYY<span class=\"token operator\">-</span>MM<span class=\"token operator\">-</span>DD</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>time_format<span class=\"token punctuation\">:</span> HH<span class=\"token punctuation\">:</span>mm<span class=\"token punctuation\">:</span>ss</pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\">## updated_option supports 'mtime', 'date', 'empty'</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>updated_option<span class=\"token punctuation\">:</span> <span class=\"token string\">'mtime'</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\">#分页数量，分页目录</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>per_page<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>pagination_dir<span class=\"token punctuation\">:</span> page</pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\"># Include / Exclude file(s)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token comment\">## include:/exclude: options only apply to the 'source/' folder</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>include<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>exclude<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>ignore<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token comment\">#主题名称</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>theme<span class=\"token punctuation\">:</span> Alex</pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token comment\"># Deployment</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>deploy<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>  <span class=\"token builtin\">type</span><span class=\"token punctuation\">:</span> git</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  repository<span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>gitee<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>AlexMelt<span class=\"token operator\">/</span>alexmelt<span class=\"token punctuation\">.</span>git</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>  branch<span class=\"token punctuation\">:</span> master</pre></td></tr></table></figure></li>\n<li>\n<p>在 https://hexo.io/themes/ 中选择合适的主题，然后下载到本地，将其解压到 blog/themes 下，根据相关主题的 README.md 设置文件夹名称:    eg：解压后，有一个文件夹是 <code>layout</code>   F:\\Projects\\Blog\\themes\\shoka\\shoka\\layout.yml，要修改为 F:\\Projects\\Blog\\themes\\layout.yml</p>\n</li>\n<li>\n<p>对 blog/_config.yml 进行更改，并且 theme 的值设置为解压的文件夹名，</p>\n</li>\n<li>\n<p>同时仓库设置为 gitee/github 的仓库中的 https 链接，例如</p>\n<ul>\n<li><img data-src=\"/images/image/Hexo/Hexo-04.png\" alt=\"Hexo-04\"></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"推送至github\"><a class=\"markdownIt-Anchor\" href=\"#推送至github\">#</a> 推送至 GitHub</h2>\n<blockquote>\n<p>前提是 GitHub 或者 gitee 配置了与本地的 SSH 公钥</p>\n</blockquote>\n<blockquote>\n<p>GitHub 仓库设置</p>\n</blockquote>\n<ul>\n<li>创建一个新仓库，命名为 ***.github.io (方便使用自带的（gitpage）</li>\n<li>获取该仓库的仓库地址</li>\n</ul>\n<blockquote>\n<p>上传至 github：</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#首次上传，需要 git 部署插件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>npm install hexo<span class=\"token operator\">-</span>deployer<span class=\"token operator\">-</span>git <span class=\"token operator\">-</span><span class=\"token operator\">-</span>save</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#依次执行：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>hexo clean</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>hexo g</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>hexo d</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#若执行 hexo g 出错则执行</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>npm install hexo <span class=\"token operator\">-</span><span class=\"token operator\">-</span>save</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#若执行 hexo d 出错则执行</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>npm install hexo<span class=\"token operator\">-</span>deployer<span class=\"token operator\">-</span>git <span class=\"token operator\">-</span><span class=\"token operator\">-</span>save</pre></td></tr></table></figure><blockquote>\n<p>或者使用 Git, 上传</p>\n</blockquote>\n<pre><code class=\"language-unix\">git init\ngit add.\ngit commit -m &quot;my blog first&quot;\ngit remote add origin &quot;远程github的仓库地址&quot;\ngit branche -M main\ngit push -u origin main\n</code></pre>\n<h2 id=\"后面操作可用可不用\"><a class=\"markdownIt-Anchor\" href=\"#后面操作可用可不用\">#</a> 后面操作，可用，可不用</h2>\n<h2 id=\"netlify建站\"><a class=\"markdownIt-Anchor\" href=\"#netlify建站\">#</a> Netlify 建站</h2>\n<p><em>免费的提供静态网站部署的平台</em></p>\n",
            "tags": [
                "Git",
                "Node.js"
            ]
        },
        {
            "id": "http://example.com/tools/Git%E4%BD%BF%E7%94%A8/",
            "url": "http://example.com/tools/Git%E4%BD%BF%E7%94%A8/",
            "title": "Git使用",
            "date_published": "2022-08-28T15:13:37.328Z",
            "content_html": "<h2 id=\"git分类\"><a class=\"markdownIt-Anchor\" href=\"#git分类\">#</a> Git 分类</h2>\n<p><a href=\"https://bingohuang.gitbooks.io/progit2/content/01-introduction/sections/about-version-control.html\"><strong>帮助文档</strong></a></p>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmdpdGJyYW5jaGluZy5qcy5vcmcv\">图文了解</span></strong></p>\n<span id=\"more\"></span>\n<blockquote>\n<p>常见的版本控制工具</p>\n</blockquote>\n<ul>\n<li>\n<p>Git</p>\n</li>\n<li>\n<p>SVN</p>\n</li>\n<li>\n<p>CVS</p>\n</li>\n<li>\n<p>VSS</p>\n</li>\n<li>\n<p>TFS</p>\n</li>\n</ul>\n<blockquote>\n<p>版本控制分类</p>\n</blockquote>\n<ol>\n<li>本地版本控制 RCS</li>\n<li>集中版本控制 SVN CVS VSS</li>\n<li>分布式版本控制 Git</li>\n</ol>\n<blockquote>\n<p>GIt 与 SVN 最主要的区别</p>\n</blockquote>\n<p>SVN 是集中版本控制系统，版本库是集中放在中央服务器，工作时用的都是自己的电脑，首先得从中央服务器得到最新的版本，然后工作，完成工作后，将完成的工作推送到中央服务器，必须联网才能工作，对网络带宽要求较高 。</p>\n<p>Git 是分布式版本控制，没有中央服务器，每个人的电脑就是一个完整的版本库，工作时不需要联网，协同的方法：比如自己在电脑上修改了 A，其他人也在电脑上修改了 A, 这时只需把各自的修改推送给对方。</p>\n<h2 id=\"安装git以及配置\"><a class=\"markdownIt-Anchor\" href=\"#安装git以及配置\">#</a> 安装 Git 以及配置</h2>\n<blockquote>\n<p>下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWdpc3RyeS5ucG1taXJyb3IuY29tL2JpbmFyeS5odG1sP3BhdGg9Z2l0LWZvci13aW5kb3dz\">https://registry.npmmirror.com/binary.html?path=git-for-windows</span></p>\n</blockquote>\n<p>修改安装路径，在中途有一个默认 vim 编辑器，可以选择更换为 notepad++，其余一路 next</p>\n<p><s>卸载：先清理环境变量，后卸载</s></p>\n<blockquote>\n<p>启动 Git</p>\n</blockquote>\n<p>安装后会在菜单生成 3 个程序：</p>\n<ul>\n<li>Git Bash：Unix 与 Linux 风格的命令行，使用最多，</li>\n<li>Git CMD：Windows 风格的命令行</li>\n<li>Git GUI：图形界面的 Git，不建议初学者使用</li>\n</ul>\n<blockquote>\n<p>基本的 Linux 命令</p>\n</blockquote>\n<p>1）、cd : 改变目录。</p>\n<p>2）、cd . . 回退到上一个目录，直接 cd 进入默认目录</p>\n<p>3）、pwd : 显示当前所在的目录路径。</p>\n<p>4）、ls (ll): 都是列出当前目录中的所有文件，只不过 ll (两个 ll) 列出的内容更为详细。</p>\n<p>5）、touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个 index.js 文件。</p>\n<p>6）、rm: 删除一个文件，rm index.js 就会把 index.js 文件删除。</p>\n<p>7）、mkdir: 新建一个目录，就是新建一个文件夹。</p>\n<p>8）、rm -r : 删除一个文件夹，rm -r src 删除 src 目录</p>\n<p>9）、mv 移动文件，mv index.html src index.html 是我们要移动的文件，src 是目标文件夹，当然，这样写，</p>\n<p>必须保证文件和目标文件夹在同一目录下。</p>\n<p>10）、reset 重新初始化终端 / 清屏。</p>\n<p>11）、clear 清屏。</p>\n<p>12）、history 查看命令历史。</p>\n<p>13）、help 帮助。</p>\n<p>14）、exit 退出。</p>\n<p>15）、# 表示注释</p>\n<blockquote>\n<p>Git 配置</p>\n</blockquote>\n<p>查看配置 <mark>git config -l</mark></p>\n<pre><code>#查看系统config \ngit config --system --list \n\n#查看当前用户（global）配置 \ngit config --global --list\n</code></pre>\n<p>查看 Git 相关的配置文件：</p>\n<ol>\n<li>Git\\mingw64\\etc\\gitconfifig ： Git 安装目录下的 gitconfifig --system 系统级</li>\n<li>C:\\Users\\Administrator\\ .gitconfifig 只适用于当前登录用户的配置 --global 全局</li>\n</ol>\n<p>这里可以直接编辑配置文件，通过命令设置后会响应到这里</p>\n<blockquote>\n<p>设置用户名与邮箱（用户标识，必要）</p>\n</blockquote>\n<p>安装 Git 后首先要做的事情是设置用户名称和 e-mail 地址。因为每次 Git 提交都会使用该信息。它被永远的嵌入到了你的提交中：</p>\n<pre><code>git config --global user.name &quot;***&quot; #名称 \ngit config --global user.email **@qq.com #邮箱 \n</code></pre>\n<h2 id=\"git基本理论\"><a class=\"markdownIt-Anchor\" href=\"#git基本理论\">#</a> Git 基本理论</h2>\n<blockquote>\n<p>工作区域</p>\n</blockquote>\n<p>Git 本地有三个工作区域：工作目录（Working Directory）、暂存区 (Stage/Index)、资源库 (Repository 或 Git Directory)。如果在加上远程的 git 仓库 (Remote Directory) 就可以分为四个工作区域。文件在这四个区域之间的转换关系如下：<img data-src=\"/images/image/Git/Git-01.png\" alt=\"Git-01\"></p>\n<ul>\n<li><strong>Workspace</strong>：工作区，就是你平时存放项目代码的地方</li>\n<li><strong>Index / Stage</strong>：暂存区，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息</li>\n<li><strong>Repository</strong>：仓库区（或本地仓库），就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中 HEAD 指向最新放入仓库的版本</li>\n<li><strong>Remote</strong>：远程仓库，托管代码的服务器，可以简单的认为是你项目组中的一台电脑用于远程数据交换</li>\n</ul>\n<p>本地的三个区域确切的说应该是 git 仓库中 HEAD 指向的版本：</p>\n<p><img data-src=\"/images/image/Git/Git-02.png\" alt=\"Git-02\"></p>\n<ul>\n<li><strong>Directory</strong>：使用 Git 管理的一个目录，也就是一个仓库，包含我们的工作空间和 Git 的管理空间。</li>\n<li><strong>WorkSpace</strong>：需要通过 Git 进行版本控制的目录和文件，这些目录和文件组成了工作空间。</li>\n<li><strong>.git</strong>：存放 Git 管理信息的目录，初始化仓库的时候自动创建。</li>\n<li><strong>Index/Stage</strong>：暂存区，或者叫待提交更新区，在提交进入 repo 之前，我们可以把所有的更新放在暂存区。</li>\n<li><strong>Local Repo</strong>：本地仓库，一个存放在本地的版本库；HEAD 会只是当前的开发分支（branch）。</li>\n<li><strong>Stash</strong>：隐藏，是一个工作状态保存栈，用于保存 / 恢复 WorkSpace 中的临时状态。</li>\n</ul>\n<blockquote>\n<p>工作流程</p>\n</blockquote>\n<p>git 的工作流程一般是：</p>\n<ol>\n<li>在工作目录中添加，修改文件</li>\n<li>将要进行版本管理的问文件放入暂存区</li>\n<li>将暂存区的文件提交到 git 仓库</li>\n</ol>\n<p>因此，git 管理的文件有三种状态：已修改（modifified）, 已暂存（staged）, 已提交 (committed)</p>\n<h2 id=\"git项目搭建\"><a class=\"markdownIt-Anchor\" href=\"#git项目搭建\">#</a> Git 项目搭建</h2>\n<blockquote>\n<p>创建工作目录与常用命令</p>\n</blockquote>\n<p>工作目录（WorkSpace) 一般就是你希望 Git 帮助你管理的文件夹，可以是你项目的目录，也可以是一个空目录，建议不要有中文。</p>\n<p><img data-src=\"/images/image/Git/Git-03.png\" alt=\"Git-03\"></p>\n<blockquote>\n<p>本地仓库搭建</p>\n</blockquote>\n<p>创建本地仓库的方法有两种：一种是创建全新的仓库，另一种是克隆远程仓库.</p>\n<ol>\n<li>\n<p>创建全新的仓库，需要用 GIT 管理的项目的根目录执行：</p>\n<pre><code># 在当前目录新建一个Git代码库 \n$ git init 12\n</code></pre>\n</li>\n<li>\n<p>执行后可以看到，仅仅在项目目录多出了一个.git 目录，关于版本等的所有信息都在这个目录里面</p>\n</li>\n</ol>\n<blockquote>\n<p>克隆远程仓库</p>\n</blockquote>\n<pre><code># 克隆一个项目和它的整个代码历史(版本信息) \n$ git clone [url]\n</code></pre>\n<h2 id=\"git文件操作\"><a class=\"markdownIt-Anchor\" href=\"#git文件操作\">#</a> Git 文件操作</h2>\n<blockquote>\n<p>文件 4 种状态</p>\n</blockquote>\n<ul>\n<li><strong>Untracked</strong>: 未跟踪，此文件在文件夹中，但并没有加入到 git 库，不参与版本控制。通过 <strong>git add</strong> 状态变为 <strong>Staged</strong> .</li>\n<li><strong>Unmodify</strong>: 文件已经入库，未修改，即版本库中的文件快照内容与文件夹中完全一致。这种类型的文件有两种去处，如果它被修改，而变为 Modified . 如果使用 git rm 移出版本库，则成为 Untracked 文件</li>\n<li><strong>Modifified</strong>: 文件已修改，仅仅是修改，并没有进行其他的操作。这个文件也有两个去处，通过 git add 可进入暂存 staged 状态，使用 git checkout 则丢弃修改过，返回到 unmodify 状态，这个 git checkout 即从库中取出文件，覆盖当前修改！</li>\n<li><strong>Staged</strong>: 暂存状态。执行 git commit 则将修改同步到库中，这时库中的文件和本地文件又变为一致，文件为 Unmodify 状态。执行 git reset HEAD filename 取消暂存，文件状态为 Modified</li>\n</ul>\n<blockquote>\n<p>查看文件状态</p>\n</blockquote>\n<pre><code>#查看指定文件状态\ngit status [filename] \n\n#查看所有文件状态 \ngit status\n\n# git add .\t\t\t添加所有文件到暂存区\n# git commit -m\t&quot;内容&quot;\t提交暂存区中的内容到本地仓库 -m 提交信息\n</code></pre>\n<blockquote>\n<p>忽略文件</p>\n</blockquote>\n<p>主目录下建立 &quot;.gitignore&quot; 文件，此文件有如下规则:</p>\n<ol>\n<li>\n<p>忽略文件中的空行或以井号（#）开始的行将会被忽略。</p>\n</li>\n<li>\n<p>可以使用 Linux 通配符。例如：星号（*）代表任意多个字符，问号（？）代表一个字符，方括号 [abc]）代表可选字符范围，大括号（{string1,string2,…}）代表可选的字符串等。</p>\n</li>\n<li>\n<p>如果名称的最前面有一个感叹号（!），表示例外规则，将不被忽略。</p>\n</li>\n<li>\n<p>如果名称的最前面是一个路径分隔符（/），表示要忽略的文件在此目录下，而子目录中的文件不忽略。</p>\n</li>\n<li>\n<p>如果名称的最后面是一个路径分隔符（/），表示要忽略的是此目录下该名称的子目录，而非文件默认文件或目录都忽略）。</p>\n</li>\n</ol>\n<pre><code>#为注释 \n*.txt \t\t   #忽略所有 .txt结尾的文件 \n!lib.txt \t   #但lib.txt除外 \n/temp \t\t   #仅忽略项目根目录下的TODO文件,不包括其它目录temp build/ \t     #忽略build/目录下的所有文件 \ndoc/*.txt \t  #会忽略 doc/notes.txt 但不包括 doc/server/arch.txt\n</code></pre>\n<h2 id=\"git分支中常用指令\"><a class=\"markdownIt-Anchor\" href=\"#git分支中常用指令\">#</a> git 分支中常用指令</h2>\n<pre><code># 列出所有本地分支 \ngit branch \n\n# 列出所有远程分支 \ngit branch -r \n\n# 新建一个分支，但依然停留在当前分支 \ngit branch [branch-name] \n\n# 新建一个分支，并切换到该分支 \ngit checkout -b [branch] \n\n# 合并指定分支到当前分支 \ngit merge [branch] \n\n# 删除分支 \ngit branch -d [branch-name] \n\n# 删除远程分支 \ngit push origin --delete [branch-name] \n$ git branch -dr [remote/branch] \n</code></pre>\n<h2 id=\"使用gitee或者github\"><a class=\"markdownIt-Anchor\" href=\"#使用gitee或者github\">#</a> 使用 Gitee 或者 Github</h2>\n<p>设置本机绑定 SSH 公钥，实现免密码登录</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token list punctuation\">1.</span> 进入 C:\\Users\\Administrator</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token list punctuation\">2.</span> 新建.ssh文件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token list punctuation\">3.</span> 进入该文件夹，搜索栏cmd进入该路径下的命令提示符</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token list punctuation\">4.</span> 敲入ssh-keygen -t rsa -C \"\"   生成公钥</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token list punctuation\">5.</span> 打开GitHub设置配置ssh：将.ssh下生成的pub公钥打开复制即可</pre></td></tr></table></figure><p>测试是否成功</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh -T git@github.com</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ssh -T git@gitee.com</pre></td></tr></table></figure>",
            "tags": [
                "Git"
            ]
        }
    ]
}
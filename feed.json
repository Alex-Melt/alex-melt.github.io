{
    "version": "https://jsonfeed.org/version/1",
    "title": "melt",
    "subtitle": "",
    "icon": "http://example.com/images/favicon.ico",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/language/python%E9%9D%A2%E8%AF%95/",
            "url": "http://example.com/language/python%E9%9D%A2%E8%AF%95/",
            "title": "python面试",
            "date_published": "2022-10-13T06:42:54.735Z",
            "content_html": "<h2 id=\"python基础\"><a class=\"markdownIt-Anchor\" href=\"#python基础\">#</a> python 基础</h2>\n<h3 id=\"1-python的特点\"><a class=\"markdownIt-Anchor\" href=\"#1-python的特点\">#</a> 1. python 的特点</h3>\n<blockquote>\n<ol>\n<li>语法简洁而清晰</li>\n<li>强大的类库（17W)</li>\n<li>胶水语言</li>\n<li>纯面向对象的语言</li>\n</ol>\n</blockquote>\n<h3 id=\"2-解释型和编译型语言的特点\"><a class=\"markdownIt-Anchor\" href=\"#2-解释型和编译型语言的特点\">#</a> 2. 解释型和编译型语言的特点</h3>\n<blockquote>\n<p>解释型语言：边执行边运行</p>\n<p>编译型语言：在执行代码前，先对文件进行编译，生成编译文件</p>\n</blockquote>\n<h3 id=\"3-python解释器的种类\"><a class=\"markdownIt-Anchor\" href=\"#3-python解释器的种类\">#</a> 3. python 解释器的种类</h3>\n<blockquote>\n<ol>\n<li>Cpython：用 c 语言实现的解释器，也是官方解释器</li>\n<li>Jpython：用 java 实现的</li>\n<li>IronPython：用.net 实现的解释器</li>\n<li>pypy：用 python 实现的解释器</li>\n</ol>\n<p>效率最高的是：pypy</p>\n</blockquote>\n<h3 id=\"4-位和字节的关系\"><a class=\"markdownIt-Anchor\" href=\"#4-位和字节的关系\">#</a> 4. 位和字节的关系</h3>\n<blockquote>\n<p>一字节 = 8 位</p>\n</blockquote>\n<h3 id=\"5-pe8规范\"><a class=\"markdownIt-Anchor\" href=\"#5-pe8规范\">#</a> 5. PE8 规范</h3>\n<blockquote></blockquote>\n<h3 id=\"6-python的最大递归层数\"><a class=\"markdownIt-Anchor\" href=\"#6-python的最大递归层数\">#</a> 6. python 的最大递归层数</h3>\n<blockquote>\n<p>998</p>\n</blockquote>\n<h3 id=\"7-ascii-unicode-utf-8-gbk的区别\"><a class=\"markdownIt-Anchor\" href=\"#7-ascii-unicode-utf-8-gbk的区别\">#</a> 7. ascii、unicode、utf-8、gbk 的区别</h3>\n<blockquote>\n<p>ASCII：占一个字节，将所有的符号以二进制的形式来表示，不支持中文</p>\n<p>Unicode：俗称万国码，使用两个字节，速度快，但浪费空间</p>\n<p>utf-8：Unicode 的一种实现方式，弥补了 Unicode 的缺点，变长编码，节省空间，但速度慢</p>\n<p>gbk：对 gb3212 的扩展，中文的字符编码，采用双字节编码</p>\n</blockquote>\n<h3 id=\"8-字节码和机器码的区别\"><a class=\"markdownIt-Anchor\" href=\"#8-字节码和机器码的区别\">#</a> 8. 字节码和机器码的区别</h3>\n<blockquote>\n<p>字节码和机器码都是二进制编码</p>\n<p>机器码：电脑 CPU 直接读取运行的代码，速度最快，但编写难，</p>\n<p>字节码：一种中间状态的二进制编码，需要直译器转译后才能成为机器码，一般在 java 中是让 JVM 来执行的为禁止代码</p>\n</blockquote>\n<h3 id=\"9-python3和python2的区别\"><a class=\"markdownIt-Anchor\" href=\"#9-python3和python2的区别\">#</a> 9. python3 和 python2 的区别</h3>\n<blockquote>\n<ol>\n<li>print：在 2.0 中是语句，在 3.0 中是一个函数</li>\n<li>整数除法不同，在 2.0 中 3/2 是 1，在 3.0 中 3/2 是 1.5</li>\n<li>列表理解循环变量，当循环变量与全局变量名称相同时，在 2.0 中会对全局变量造成泄露，影响，在 3.0 则规避了这个问题</li>\n<li>Unicode 字符串问题，在 2.0 中字符串需要使用 <code>u''</code> ，在 30 中字符串默认是 Unicode 编码形式</li>\n<li>try…catch 取别名时，as 在 3.0 中不可省略</li>\n<li>xrange 的消失</li>\n</ol>\n</blockquote>\n<h3 id=\"10python3和python2中int和long的区别\"><a class=\"markdownIt-Anchor\" href=\"#10python3和python2中int和long的区别\">#</a> 10.python3 和 python2 中 int 和 long 的区别</h3>\n<blockquote>\n<p>python3 中没用 long，int 的范围是动态长度的</p>\n<p>python2 中的 long 是无限大小</p>\n</blockquote>\n<h3 id=\"11-xrange和range的区别\"><a class=\"markdownIt-Anchor\" href=\"#11-xrange和range的区别\">#</a> 11. xrange 和 range 的区别</h3>\n<blockquote>\n<p>xrange 在 3.0 已经不再使用，两个都是用于 for 循环</p>\n<p>如果要生成很大的数字序列，xrange 会节省大量的内存，不需要直接开辟很大的内存空间，</p>\n<p>range 返回的是一个列表，xrange 返回的是一个生成器</p>\n</blockquote>\n<h3 id=\"12-文件操作时xreadlines和radlines的区别\"><a class=\"markdownIt-Anchor\" href=\"#12-文件操作时xreadlines和radlines的区别\">#</a> 12. 文件操作时，xreadlines 和 radlines 的区别</h3>\n<blockquote>\n<p>xreadlines 在 3.0 中已经不再使用</p>\n<p>readlines 返回的是一个列表，二 xreadlines 返回的是一个生成器</p>\n</blockquote>\n<h3 id=\"13-lambda表达式的格式\"><a class=\"markdownIt-Anchor\" href=\"#13-lambda表达式的格式\">#</a> 13. lambda 表达式的格式</h3>\n<blockquote>\n<p>lambda 形参：返回值</p>\n<p>常用于泛函编程，即只有一句话的函数</p>\n<ul>\n<li>\n<p>可以避免使用函数名，使用方便，代码更加简洁，优雅</p>\n</li>\n<li>\n<p>代码相对简化，可以适当地提高代码的可读性</p>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"14-pass的作用\"><a class=\"markdownIt-Anchor\" href=\"#14-pass的作用\">#</a> 14. pass 的作用</h3>\n<blockquote>\n<p>不执行任何操作，其占位符的作用</p>\n</blockquote>\n<h3 id=\"15-arg和kwarg的作用\"><a class=\"markdownIt-Anchor\" href=\"#15-arg和kwarg的作用\">#</a> 15. *arg 和 **kwarg 的作用</h3>\n<blockquote>\n<p>两者均是可变长参数</p>\n<p>*args：可变长参数，把参数打包成元组来处理，只能通过位置参数来传参</p>\n<p>**kwargs：关键字参数，把参数打包成字典来处理，只能通过关键字传参</p>\n</blockquote>\n<h3 id=\"16-is和的区别\"><a class=\"markdownIt-Anchor\" href=\"#16-is和的区别\">#</a> 16. is 和 == 的区别</h3>\n<blockquote>\n<p>is：比较的是否指向同一块内存，比较的是地址</p>\n<p>==：比较的是两个的值是否相等</p>\n</blockquote>\n<h3 id=\"17-python的深浅拷贝机制\"><a class=\"markdownIt-Anchor\" href=\"#17-python的深浅拷贝机制\">#</a> 17. python 的深浅拷贝机制</h3>\n<blockquote>\n<p>赋值：多个名字指向一个引用</p>\n<p>浅拷贝：只会复制父对象，不会复制子对象，例如二维数组，浅拷贝后，内层的指向还是同一个</p>\n<p>深拷贝：完全的拷贝，修改一个不会对另一个造成任何影响</p>\n</blockquote>\n<h3 id=\"18-python的垃圾回收机制\"><a class=\"markdownIt-Anchor\" href=\"#18-python的垃圾回收机制\">#</a> 18. python 的垃圾回收机制</h3>\n<blockquote>\n<p>python 采用引用计数机制为主，标记 - 清除，分代收集（隔代回收）为辅的策略</p>\n</blockquote>\n<h3 id=\"19-python的可变类型和不可变类型\"><a class=\"markdownIt-Anchor\" href=\"#19-python的可变类型和不可变类型\">#</a> 19. python 的可变类型和不可变类型</h3>\n<blockquote>\n<p>可变长参数： <code>list</code> ， <code>Set</code> ， <code>dict</code> ，</p>\n<p>不可变长参数： <code>str</code> ， <code>tuple</code> ， <code>number</code></p>\n<p><em>可变长参数与不可变长参数是相对于引用地址来说，对于不可变而言，修改变量相当于新建了一个对象，而可变类型允许变量的值发生改变</em></p>\n</blockquote>\n<h3 id=\"20-type与isinstance的区别\"><a class=\"markdownIt-Anchor\" href=\"#20-type与isinstance的区别\">#</a> 20.   <code>type</code>  与 <code>isinstance</code>  的区别</h3>\n<blockquote>\n<p>type (a)：不会认为子类是一种父类类型</p>\n<p>isinstance (a,int)：会认为子类是一种父类类型</p>\n</blockquote>\n<h3 id=\"21小整池对象\"><a class=\"markdownIt-Anchor\" href=\"#21小整池对象\">#</a> 21. 小整池对象</h3>\n<blockquote>\n<p>python 默认 - 5~256，bool 是常用的，会提前将这范围内 的值创建好，用时直接从池子拿取</p>\n</blockquote>\n<h3 id=\"22-字符串编码与解码顺序\"><a class=\"markdownIt-Anchor\" href=\"#22-字符串编码与解码顺序\">#</a> 22. 字符串编码与解码顺序</h3>\n<blockquote>\n<p>解码：utf—&gt;utf16—&gt;unicode—&gt;gbk</p>\n<p>编码：与解码正好相反，</p>\n</blockquote>\n<h3 id=\"23-常见的内置函数\"><a class=\"markdownIt-Anchor\" href=\"#23-常见的内置函数\">#</a> 23. 常见的内置函数</h3>\n<blockquote>\n<p><code>abs</code> , <code>divmod</code> , <code>max</code> , <code>min</code> , <code>pow</code> , <code>round</code> , <code>sum</code> , <code>complex</code> , <code>str</code> ,</p>\n<p><code>dir</code> , <code>staticmethod</code> , <code>enumerate</code> , <code>dict</code> , <code>id</code> …</p>\n</blockquote>\n<h3 id=\"24-filtermapreduce的作用\"><a class=\"markdownIt-Anchor\" href=\"#24-filtermapreduce的作用\">#</a> 24. filter,map,reduce 的作用</h3>\n<blockquote>\n<ul>\n<li><code>filter</code>  过滤器：\n<ul>\n<li>在 python2.0 中是函数，在 3.0 中是类</li>\n<li>filter(function or None,iterable)</li>\n<li>如果 function 给出，将可迭代对象中的每一个元素，都挨个传递给 function 作为参数，筛选出 return 为 True 值</li>\n<li>如果 function 没有给出，一定要填 None，则直接返回 iterable 中的为 True 的值</li>\n<li>假值：任何零、None、空<br>\n [],(),{},’’,0,False,0.0,0.,.0</li>\n</ul>\n</li>\n<li><code>map</code>  映射：\n<ul>\n<li>在 python2.0 中是函数，在 3.0 中是类</li>\n<li>map(func, *iterables)</li>\n<li>将多个可迭代对象的对应的相同下标的元素，作为参数传递给 func，返回一个 map 对象，map 中每个元素为：相同下标根据 func 运算后的结果。当最短的可迭代对象执行完毕，则停止运算。</li>\n</ul>\n</li>\n<li><code>reduce</code>\n<ul>\n<li>在 python2.0 中是内置函数，在 3.0 中是在 functools 之下的函数</li>\n<li>reduce(function, sequence, initial=_initial_missing)</li>\n<li>将序列中的前两个元素传入给 function 作为参数</li>\n<li>function 将计算出的结果和序列中的下一个元素，作为新的两个参数，重新传递给 function，以此类推</li>\n<li>最终得到一个结果（最终的数值）</li>\n<li>如果设置了 initial，则先传入 initial 和序列的第一个元素，给 function</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"25-序列\"><a class=\"markdownIt-Anchor\" href=\"#25-序列\">#</a> 25. 序列</h3>\n<blockquote>\n<p>可迭代对象，支持索引操作，和切片操作</p>\n<p><code>list</code> ， <code>tuple</code> ， <code>str</code></p>\n</blockquote>\n<h3 id=\"26-re的match和search区别\"><a class=\"markdownIt-Anchor\" href=\"#26-re的match和search区别\">#</a> 26. re 的 match 和 search 区别</h3>\n<blockquote>\n<p>match：从首字母开始匹配，匹配成功则返回 match 对象，失败则返回 None</p>\n<p>search：从中搜寻，只会返回第一条查询结果</p>\n</blockquote>\n<h3 id=\"27-正则的贪婪匹配\"><a class=\"markdownIt-Anchor\" href=\"#27-正则的贪婪匹配\">#</a> 27. 正则的贪婪匹配</h3>\n<blockquote>\n<p>贪婪模式和懒惰模式影响的是正则表达式的限定符的匹配结果，</p>\n<p>在限定符后面加上？是懒惰模式，不加则是贪婪模式，</p>\n<p>贪婪模式会尽可能多的匹配字符，</p>\n</blockquote>\n<h3 id=\"28-i-2-for-i-in-range100是生成器\"><a class=\"markdownIt-Anchor\" href=\"#28-i-2-for-i-in-range100是生成器\">#</a> 28. (i % 2 for i in range (100) 是生成器</h3>\n<h3 id=\"29-1-or-2-1-and-2-1-22\"><a class=\"markdownIt-Anchor\" href=\"#29-1-or-2-1-and-2-1-22\">#</a> 29. 1 or 2  ;1 and 2  ;1 &lt; (2==2)  ;</h3>\n<blockquote>\n<p>a or b 若 a 为真，值为 a，否则为 b</p>\n<p>a and b 若 a 为真，值为 b，反之则为 a</p>\n</blockquote>\n<h3 id=\"30-字符串格式化的方式\"><a class=\"markdownIt-Anchor\" href=\"#30-字符串格式化的方式\">#</a> 30. 字符串格式化的方式</h3>\n<blockquote>\n<ul>\n<li>通过下标的方式进行填充\n<ul>\n<li><code>print('&#123;0&#125;,haha,&#123;1&#125;'.format('a', 'b'))</code></li>\n</ul>\n</li>\n<li>通过关键字的方式进行填充\n<ul>\n<li><code>print('&#123;name&#125;,haha'.format(name='乔鼎'))</code></li>\n</ul>\n</li>\n<li>基于 c 语言方式的格式化\n<ul>\n<li><code>print('我的名字叫做%s'%name)</code></li>\n</ul>\n</li>\n<li>在 3.5 之后添加了 f 方式的字符串\n<ul>\n<li><code>print(f'&#123;name&#125;是什么')</code></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"31-对闭包的理解\"><a class=\"markdownIt-Anchor\" href=\"#31-对闭包的理解\">#</a> 31. 对闭包的理解</h3>\n<blockquote>\n<p>是一种编程范式，</p>\n<p>所需的条件：</p>\n<ol>\n<li>必须是一个内嵌函数</li>\n<li>外部函数的返回值必须是内部函数的函数对象</li>\n<li>内部函数必须引用外部函数的局部变量</li>\n</ol>\n<p>闭包的作用：</p>\n<ol>\n<li>可以在声明较少二点参数下，传递更多的参数</li>\n<li>可以使用更多的内部函数</li>\n</ol>\n<p>闭包的优势：</p>\n<ol>\n<li>避免使用全局变量，全局变量容易出现脏读的问题</li>\n<li>提供了部分的数据隐藏</li>\n<li>可以更优雅的实习面向对象</li>\n</ol>\n</blockquote>\n<h3 id=\"32-os和sys模块的使用\"><a class=\"markdownIt-Anchor\" href=\"#32-os和sys模块的使用\">#</a> 32. os 和 sys 模块的使用</h3>\n<h3 id=\"33-生成一个随机数\"><a class=\"markdownIt-Anchor\" href=\"#33-生成一个随机数\">#</a> 33. 生成一个随机数</h3>\n<blockquote>\n<p>使用 random</p>\n<p>random.choice ([])：从列表中随机选取一个</p>\n<p>random.uniform (n,m)：生成 n 到 m 之间的浮点数</p>\n<p>random.random ()：生成 0~1 之间的浮点数</p>\n<p>random.randint (n,m)：生成 n 到 m 之间的随机数</p>\n</blockquote>\n<h3 id=\"34-面向对象的继承的特点\"><a class=\"markdownIt-Anchor\" href=\"#34-面向对象的继承的特点\">#</a> 34. 面向对象的继承的特点</h3>\n<blockquote>\n<ol>\n<li>子类可以继承父类的成员</li>\n<li>子类不能继承父类的私有属性</li>\n<li>具有扩展性，父类扩展了子类</li>\n<li>父类可以拥有多个子类，子类也可以拥有多个父类</li>\n<li>如果子类有构造方法，则使用子类的构造方法，没有则使用父类的构造方法</li>\n</ol>\n</blockquote>\n<h3 id=\"35-面向对象中super的作用\"><a class=\"markdownIt-Anchor\" href=\"#35-面向对象中super的作用\">#</a> 35. 面向对象中 super 的作用</h3>\n<blockquote>\n<p>当子类重写了父类的方法，又想调用父类的同名方法时，需要使用 super</p>\n</blockquote>\n<h3 id=\"36-_和__的区别\"><a class=\"markdownIt-Anchor\" href=\"#36-_和__的区别\">#</a> 36.  <code>_</code> 和 <code>__</code> 的区别</h3>\n<blockquote>\n<p>python 中没有真正的私有方法， <code>_</code> 实现了类似的私有方法 ，但不是真正的私有</p>\n<p><code>__</code> 代表当前不允许被子类重写，当子类重写该方法，调用该方法执行的还是父类中的</p>\n</blockquote>\n<h3 id=\"37-判断势函数还是方法\"><a class=\"markdownIt-Anchor\" href=\"#37-判断势函数还是方法\">#</a> 37. 判断势函数还是方法</h3>\n<blockquote>\n<p>可以使用 type 或者 isinstance 的返回值来判断</p>\n</blockquote>\n<h3 id=\"38-类方法和静态方法的区别\"><a class=\"markdownIt-Anchor\" href=\"#38-类方法和静态方法的区别\">#</a> 38. 类方法和静态方法的区别</h3>\n<blockquote>\n<p>类方法需要隐含的参数，cls，类似于实例方法中的 self</p>\n<p>静态方法使用 @staticmethod 修饰</p>\n<p>类方法使用 @classmethod 修饰</p>\n</blockquote>\n<h3 id=\"39-面向对象的mro\"><a class=\"markdownIt-Anchor\" href=\"#39-面向对象的mro\">#</a> 39. 面向对象的 mro</h3>\n<blockquote>\n<p>mro：继承链式关系 — 在整个继承网上，所有的类只会出现一次</p>\n</blockquote>\n<h3 id=\"40-metaclass作用以及应用场景\"><a class=\"markdownIt-Anchor\" href=\"#40-metaclass作用以及应用场景\">#</a> 40. metaclass 作用？以及应用场景？</h3>\n<blockquote>\n<p>metaclass：元类，类似于创建类的模板，所有的类都是通过他来创建的，可以自由控制类的创建过程</p>\n<p>默认是 type</p>\n</blockquote>\n<h3 id=\"41-什么是反射以及应用场景\"><a class=\"markdownIt-Anchor\" href=\"#41-什么是反射以及应用场景\">#</a> 41. 什么是反射以及应用场景</h3>\n<blockquote>\n<p>反射：程序运行过程中可以动态（在程序运行时）获取对象的信息</p>\n<p>应用场景：</p>\n<ul>\n<li>hasattr（obj，属性）：判断对象是否存在</li>\n<li>getattr（obj，属性，None）：当获取不到属性时，返回一个指定的</li>\n<li>setattr（obj，属性，要赋的值）：为属性赋值</li>\n<li>delattr（类名，属性）删除该属性</li>\n</ul>\n</blockquote>\n<h3 id=\"42-尽量多的方法实现单例模式\"><a class=\"markdownIt-Anchor\" href=\"#42-尽量多的方法实现单例模式\">#</a> 42. 尽量多的方法实现单例模式</h3>\n<blockquote>\n<p>方法一：只实例化一个对象，剩下时候直接 import</p>\n<p>方法二：实例化一个对象时，是先执行了类的__new__方法（我们没写时，默认调用 object.<strong>new</strong>），实例化对象；然后再执行类的__init__方法，对这个对象进行初始化，所有我们可以基于这个，实现单例模式</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">test</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    instance<span class=\"token operator\">=</span><span class=\"token boolean\">None</span> <span class=\"token comment\"># 设置一个类属性来判断是否实例化过对象</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__new__</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span><span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> cls<span class=\"token punctuation\">.</span>instance <span class=\"token operator\">==</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            cls<span class=\"token punctuation\">.</span>instance<span class=\"token operator\">=</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">.</span>__new__<span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 如果没有就创建一个</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">return</span> cls<span class=\"token punctuation\">.</span>instance</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">return</span> cls<span class=\"token punctuation\">.</span>instance</pre></td></tr></table></figure><p>方法三：通过函数装饰器来实现单例模式</p>\n<p>方法四：通过类装饰器来实现</p>\n<p>方法五：通过类的绑定方法</p>\n<p>方法六：通过元类来实现</p>\n</blockquote>\n<h3 id=\"43-装饰器的写法以及应用场景\"><a class=\"markdownIt-Anchor\" href=\"#43-装饰器的写法以及应用场景\">#</a> 43. 装饰器的写法，以及应用场景</h3>\n<blockquote>\n<p>应用场景：</p>\n<ul>\n<li>用于身份验证</li>\n<li>日志记录</li>\n<li>用于输入合理性检查</li>\n<li>缓存装饰器</li>\n</ul>\n</blockquote>\n<h3 id=\"44-异常处理方法主动抛出异常\"><a class=\"markdownIt-Anchor\" href=\"#44-异常处理方法主动抛出异常\">#</a> 44. 异常处理方法，主动抛出异常</h3>\n<blockquote>\n<p>try–catch–else–finally</p>\n<p>主动抛出异常使用 raise 关键字</p>\n</blockquote>\n<h3 id=\"45-with-statement的好处是什么\"><a class=\"markdownIt-Anchor\" href=\"#45-with-statement的好处是什么\">#</a> 45. with statement 的好处是什么</h3>\n<h3 id=\"46-json序列化时可以处理的数据类型有哪些如何定制支持datdetime类型\"><a class=\"markdownIt-Anchor\" href=\"#46-json序列化时可以处理的数据类型有哪些如何定制支持datdetime类型\">#</a> 46. json 序列化时，可以处理的数据类型有哪些？，如何定制支持 datdetime 类型</h3>\n<h3 id=\"47-json序列化时默认遇到中文会转成unicode如何保留中文\"><a class=\"markdownIt-Anchor\" href=\"#47-json序列化时默认遇到中文会转成unicode如何保留中文\">#</a> 47. json 序列化时，默认遇到中文会转成 unicode，如何保留中文</h3>\n<h3 id=\"48-断言的应用场景\"><a class=\"markdownIt-Anchor\" href=\"#48-断言的应用场景\">#</a> 48. 断言的应用场景</h3>\n<blockquote>\n<p>在没完善一个程序之前，我们不知道程序在哪里会出错，与其让它在运行最崩溃，不如在出现错误条件时就崩溃，需要使用 assert 断言</p>\n</blockquote>\n<h3 id=\"49-简述yield和yield-from关键字\"><a class=\"markdownIt-Anchor\" href=\"#49-简述yield和yield-from关键字\">#</a> 49. 简述 yield 和 yield from 关键字</h3>\n<blockquote>\n<p>yield：是生成器</p>\n<p>yield from：是协程，所在的函数是委托生成器，主要用于调用方和子生成方建立一个双向通道</p>\n</blockquote>\n<h3 id=\"50使用代码查看列举目录下的所有文件\"><a class=\"markdownIt-Anchor\" href=\"#50使用代码查看列举目录下的所有文件\">#</a> 50. 使用代码查看列举目录下的所有文件</h3>\n<blockquote>\n<p>os.listdir(path)</p>\n</blockquote>\n<h3 id=\"51-对面向对象的理解\"><a class=\"markdownIt-Anchor\" href=\"#51-对面向对象的理解\">#</a> 51. 对面向对象的理解</h3>\n<blockquote>\n<p><em>简化流程，让复杂的需求过呢更加容易实现</em></p>\n<p>各司其职，弱耦合性，可重用性，可扩展性</p>\n</blockquote>\n<h2 id=\"网络编程\"><a class=\"markdownIt-Anchor\" href=\"#网络编程\">#</a> 网络编程</h2>\n<h3 id=\"1-简述osi七层模型\"><a class=\"markdownIt-Anchor\" href=\"#1-简述osi七层模型\">#</a> 1. 简述 OSI 七层模型</h3>\n<h3 id=\"2-cs和bs架构\"><a class=\"markdownIt-Anchor\" href=\"#2-cs和bs架构\">#</a> 2. C/S 和 B/S 架构</h3>\n<h3 id=\"3-三次握手和四次挥手\"><a class=\"markdownIt-Anchor\" href=\"#3-三次握手和四次挥手\">#</a> 3. 三次握手和四次挥手</h3>\n<h3 id=\"4-tcp和udp的区别\"><a class=\"markdownIt-Anchor\" href=\"#4-tcp和udp的区别\">#</a> 4. TCP 和 UDP 的区别</h3>\n<h2 id=\"爬虫\"><a class=\"markdownIt-Anchor\" href=\"#爬虫\">#</a> 爬虫</h2>\n<h2 id=\"数据库和缓存\"><a class=\"markdownIt-Anchor\" href=\"#数据库和缓存\">#</a> 数据库和缓存</h2>\n<h2 id=\"前端框架和其他\"><a class=\"markdownIt-Anchor\" href=\"#前端框架和其他\">#</a> 前端框架和其他</h2>\n",
            "tags": []
        },
        {
            "id": "http://example.com/language/Scrapy/",
            "url": "http://example.com/language/Scrapy/",
            "title": "scrapy框架",
            "date_published": "2022-10-10T01:37:29.823Z",
            "content_html": "<h1 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\">#</a> 简介</h1>\n<p><em>爬虫中封装好的框架，便于开发，使用纯 python 编写</em></p>\n<h3 id=\"依赖包\"><a class=\"markdownIt-Anchor\" href=\"#依赖包\">#</a> 依赖包</h3>\n<ul>\n<li><code>lxml</code> ：xml 解析器</li>\n<li><code>parsel</code> ：写在 <code>lxml</code>  上面的 <code>html</code>  数据提取库</li>\n<li><code>w3lib</code> ：用于处理 URL 和网页编码的多用途帮助程序</li>\n<li><code>twisted</code> ：异步网络框架</li>\n<li><code>craptography</code>  和 <code>pyOpenSSL</code> ：处理各种安全需求</li>\n</ul>\n<p>封装的模块：</p>\n<ul>\n<li>高性能的持久化操作</li>\n<li>异步的数据下载操作</li>\n<li>高性能的数据解析操作</li>\n<li>分布式</li>\n</ul>\n<blockquote>\n<p>下载： <code>pip install scrapy</code></p>\n</blockquote>\n<p><img data-src=\"https://www.runoob.com/wp-content/uploads/2018/10/8c591d54457bb033812a2b0364011e9c_articlex.png\" alt=\"img\"></p>\n<ul>\n<li><strong>Scrapy Engine (引擎)</strong>: 负责 Spider、ItemPipeline、Downloader、Scheduler 中间的通讯，信号、数据传递等。</li>\n<li><strong>Scheduler (调度器)</strong>: 它负责接受引擎发送过来的 Request 请求，并按照一定的方式进行整理排列，入队，当引擎需要时，交还给引擎。</li>\n<li><strong>Downloader（下载器）</strong>：负责下载 Scrapy Engine (引擎) 发送的所有 Requests 请求，并将其获取到的 Responses 交还给 Scrapy Engine (引擎)，由引擎交给 Spider 来处理，</li>\n<li><strong>Spider（爬虫）</strong>：它负责处理所有 Responses, 从中分析提取数据，获取 Item 字段需要的数据，并将需要跟进的 URL 提交给引擎，再次进入 Scheduler (调度器).</li>\n<li><strong>Item Pipeline (管道)</strong>：它负责处理 Spider 中获取到的 Item，并进行进行后期处理（详细分析、过滤、存储等）的地方。</li>\n<li><strong>Downloader Middlewares（下载中间件）</strong>：你可以当作是一个可以自定义扩展下载功能的组件。</li>\n<li><strong>Spider Middlewares（Spider 中间件）</strong>：你可以理解为是一个可以自定扩展和操作引擎和 Spider 中间通信的功能组件（比如进入 Spider 的 Responses; 和从 Spider 出去的 Requests）</li>\n</ul>\n<h3 id=\"创建项目\"><a class=\"markdownIt-Anchor\" href=\"#创建项目\">#</a> 创建项目</h3>\n<blockquote>\n<p><em>在自定义目录下面创建新项目</em></p>\n</blockquote>\n<p><code>scrapy startproject test01</code></p>\n<blockquote>\n<p><em>在 <code>items</code>  下面编写类似 ORM 的映射模型</em></p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> scrapy</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Test01Item</span><span class=\"token punctuation\">(</span>scrapy<span class=\"token punctuation\">.</span>Item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># define the fields for your item here like:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># name = scrapy.Field()</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> scrapy<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    nickname <span class=\"token operator\">=</span> scrapy<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>创建第一只蜘蛛放在生成的 spiders 下面，或者使用在创建的 <code>myspider</code>  下面使用命令生成</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> scrapy</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">JiayuanSpider</span><span class=\"token punctuation\">(</span>scrapy<span class=\"token punctuation\">.</span>Spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    name <span class=\"token operator\">=</span> <span class=\"token string\">'jiayuan'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">start_requests</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        urls<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token string\">'http/.../page/1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token string\">'http/.../page/2'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> url <span class=\"token keyword\">in</span> urls<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">yield</span> scrapy<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        filename <span class=\"token operator\">=</span> <span class=\"token string\">\"search.txt\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">JiayuanSpider</span><span class=\"token punctuation\">(</span>scrapy<span class=\"token punctuation\">.</span>Spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    name <span class=\"token operator\">=</span> <span class=\"token string\">'jiayuan'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tstart_urls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token string\">'http://quotes.toscrape.com/page/1/'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token string\">'http://quotes.toscrape.com/page/2/'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        filename <span class=\"token operator\">=</span> <span class=\"token string\">\"search.txt\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>属性方法：</p>\n<ul>\n<li>\n<p><code>name</code>  ：标识蜘蛛。它在一个项目中必须是唯一的，即不能为不同的爬行器设置相同的名称。</p>\n</li>\n<li>\n<p><code>start_requests()</code>  ：必须返回请求的可迭代 (您可以返回请求列表或编写生成器函数)，爬行器将从该请求开始爬行。后续请求将从这些初始请求中相继生成。</p>\n</li>\n<li>\n<p><code>parse()</code>  ：将被调用以处理为每个请求下载的响应的方法。Response 参数是 <a href=\"https://www.osgeo.cn/scrapy/topics/request-response.html#scrapy.http.TextResponse\"> <code>TextResponse</code> </a> 它保存页面内容，并具有进一步有用的方法来处理它。</p>\n<p>这个  <code>parse()</code>  方法通常解析响应，将抓取的数据提取为字典，还查找要遵循的新 URL 并创建新请求 ( <code>Request</code>  )。</p>\n</li>\n</ul>\n<blockquote>\n<p>返回到 spiders 的上一级目录，命令行运行</p>\n</blockquote>\n<p><em>scrapy crawl xxx（你的 spiders 下面的每一个蜘蛛）</em></p>\n<h3 id=\"scrapy-shell\"><a class=\"markdownIt-Anchor\" href=\"#scrapy-shell\">#</a> scrapy shell</h3>\n<ul>\n<li><code>response.css('title')</code> ：返回一个 Selector 对象</li>\n<li><code>response.css('title').getall()</code> ：返回所有符合的列表\n<ul>\n<li><code>::text</code> ：代表只获取元素文本，否则返回这个完整的标签</li>\n</ul>\n</li>\n<li><code>response.css('title::text').get()</code> ：获取符合的第一个元素</li>\n<li><code>response.css('title::text')[1].get()</code> ：获取符合的第二个元素</li>\n<li><code>response.css('title::text').re(r'Q\\w+')</code> ：也可以使用正则</li>\n<li><code>response.xpath()</code> ：支持 xpath 解析</li>\n</ul>\n<p>获取属性信息：</p>\n<ul>\n<li><code>response.css('li.next a::attr(href)').get()</code></li>\n<li><code>response.css('li.next a').attrib['href']</code></li>\n</ul>\n<h4 id=\"提取数据\"><a class=\"markdownIt-Anchor\" href=\"#提取数据\">#</a> 提取数据</h4>\n<p>剪贴蜘蛛通常会生成许多字典，其中包含从页面中提取的数据。为此，我们使用  <code>yield</code>  回调中的 python 关键字，如下所示：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> scrapy</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">QuotesSpider</span><span class=\"token punctuation\">(</span>scrapy<span class=\"token punctuation\">.</span>Spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    name <span class=\"token operator\">=</span> <span class=\"token string\">\"quotes\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    start_urls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token string\">'http://quotes.toscrape.com/page/1/'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">'http://quotes.toscrape.com/page/2/'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span> quote <span class=\"token keyword\">in</span> response<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">(</span><span class=\"token string\">'div.quote'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">yield</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token string\">'text'</span><span class=\"token punctuation\">:</span> quote<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">(</span><span class=\"token string\">'span.text::text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token string\">'author'</span><span class=\"token punctuation\">:</span> quote<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">(</span><span class=\"token string\">'small.author::text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token string\">'tags'</span><span class=\"token punctuation\">:</span> quote<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">(</span><span class=\"token string\">'div.tags a.tag::text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>getall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如果运行这个 spider，它将用日志输出提取的数据：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">2016-09-19</span> <span class=\"token value attr-value\">18:57:19 [scrapy.core.scraper] DEBUG: Scraped from &lt;200 http://quotes.toscrape.com/page/1/></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">&#123;'tags'</span><span class=\"token punctuation\">:</span> <span class=\"token value attr-value\">['life', 'love'], 'author': 'André Gide', 'text': '“It is better to be hated for what you are than to be loved for what you are not.”'&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">2016-09-19</span> <span class=\"token value attr-value\">18:57:19 [scrapy.core.scraper] DEBUG: Scraped from &lt;200 http://quotes.toscrape.com/page/1/></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">&#123;'tags'</span><span class=\"token punctuation\">:</span> <span class=\"token value attr-value\">['edison', 'failure', 'inspirational', 'paraphrased'], 'author': 'Thomas A. Edison', 'text': \"“I have not failed. I've just found 10,000 ways that won't work.”\"&#125;</span></pre></td></tr></table></figure><h4 id=\"递归式地爬取下一页\"><a class=\"markdownIt-Anchor\" href=\"#递归式地爬取下一页\">#</a> 递归式地爬取下一页</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">for</span> quote <span class=\"token keyword\">in</span> response<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">(</span><span class=\"token string\">'div.quote'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">yield</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token string\">'text'</span><span class=\"token punctuation\">:</span> quote<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">(</span><span class=\"token string\">'span.text::text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token string\">'author'</span><span class=\"token punctuation\">:</span> quote<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">(</span><span class=\"token string\">'small.author::text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token string\">'tags'</span><span class=\"token punctuation\">:</span> quote<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">(</span><span class=\"token string\">'div.tags a.tag::text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>getall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        next_page <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">(</span><span class=\"token string\">'li.next a::attr(href)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> next_page <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            next_page <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>urljoin<span class=\"token punctuation\">(</span>next_page<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">yield</span> scrapy<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">(</span>next_page<span class=\"token punctuation\">,</span> callback<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>也可以将选择器传递给  <code>response.follow</code>  而不是字符串；此选择器应提取必要的属性：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> href <span class=\"token keyword\">in</span> response<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">(</span><span class=\"token string\">'ul.pager a::attr(href)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">yield</span> response<span class=\"token punctuation\">.</span>follow<span class=\"token punctuation\">(</span>href<span class=\"token punctuation\">,</span> callback<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>生成助手函数，用于从 css 查询中提取和清除数据</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/Linux/CentOS7/",
            "url": "http://example.com/Linux/CentOS7/",
            "title": "",
            "date_published": "2022-10-07T02:35:53.291Z",
            "content_html": "<h2 id=\"ip\"><a class=\"markdownIt-Anchor\" href=\"#ip\">#</a> IP</h2>\n<h3 id=\"查看ip\"><a class=\"markdownIt-Anchor\" href=\"#查看ip\">#</a> 查看 IP</h3>\n<ul>\n<li>ip addr</li>\n</ul>\n<p><em>若此时 IP 显示不出来，则进入设置</em></p>\n<ul>\n<li>进入根目录 <code>cd /</code></li>\n<li>进入配置 IP 所在的目录 <code>cd etc/sysconfig/network-scripts</code></li>\n<li>编辑 <code>vi ipcfg-en33</code></li>\n<li>使用 i 进入编辑，</li>\n<li>修改最后一项为 yes</li>\n<li>编辑完成后 esc 退出，使用 <code>:wq</code>  进行保存</li>\n<li>重启网络检查是否生效 <code>systemctl restart network </code></li>\n</ul>\n<h3 id=\"ifconfig命令找不到\"><a class=\"markdownIt-Anchor\" href=\"#ifconfig命令找不到\">#</a> ifconfig 命令找不到</h3>\n<ul>\n<li>使用 <code>yum search ifconfig</code></li>\n<li><code>yun install net -tools.x86_64</code></li>\n</ul>\n<h3 id=\"检测是否连接网络\"><a class=\"markdownIt-Anchor\" href=\"#检测是否连接网络\">#</a> 检测是否连接网络</h3>\n<ul>\n<li><code>ping www.baidu.com</code></li>\n</ul>\n<h2 id=\"vim编辑器\"><a class=\"markdownIt-Anchor\" href=\"#vim编辑器\">#</a> vim 编辑器</h2>\n<p><em>vim 是 vi 编辑器的增强版，有三种模式：一般模式，编辑模式，命令模式</em></p>\n<ul>\n<li>一般模式：正常的浏览模式，不做任何操作</li>\n<li>编辑模式：可以对当前模式进行模式进行修改</li>\n<li>命令模式：通过输入一些命令来完成对文本的一些操作</li>\n</ul>\n<h3 id=\"安装vim编辑器\"><a class=\"markdownIt-Anchor\" href=\"#安装vim编辑器\">#</a> 安装 vim 编辑器</h3>\n<ul>\n<li><code>yun -y install vim</code></li>\n</ul>\n<p>查看是否安装 vim：</p>\n<ul>\n<li><code>rpm -qa|grep vim</code></li>\n</ul>\n<h3 id=\"vim常用命令\"><a class=\"markdownIt-Anchor\" href=\"#vim常用命令\">#</a> vim 常用命令</h3>\n<ul>\n<li>创建文件：vim 文件名称，如果文件存在则直接进入文件</li>\n<li>进入编辑模式：按下 <code>i</code>  或者 <code>o</code></li>\n<li>退出编辑模式：按下 esc 键</li>\n<li>进入命令模式：输入：或者 /</li>\n<li>退出命令模式：按下 esc 键</li>\n<li>退回到 linux 命令行：\n<ul>\n<li>保存对文件的修改并退出  <code>:wq</code></li>\n<li>不保存对文件的修改  <code>:q</code></li>\n<li>不保存对文件的修改并强制退出  <code>:q!</code></li>\n</ul>\n</li>\n<li>撤销对文件的编辑，等同于 ctrl+z  <code>u</code>\n<ul>\n<li>先保证是在一般模式下，</li>\n</ul>\n</li>\n<li>拷贝当前行，然后粘贴\n<ul>\n<li>在一般模式下，对某行复制 按住两次 y，粘贴的位置按下 p</li>\n</ul>\n</li>\n<li>拷贝多行\n<ul>\n<li>在一般模式下，在首行按下需要拷贝的行数，复制 按住两次 y，粘贴的位置按下 p</li>\n</ul>\n</li>\n<li>删除当前行\n<ul>\n<li>在一般模式下，按下两次 d</li>\n</ul>\n</li>\n<li>删除多行：\n<ul>\n<li>按下行数加两次 d</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"防火墙状态\"><a class=\"markdownIt-Anchor\" href=\"#防火墙状态\">#</a> 防火墙状态</h2>\n<ul>\n<li>查看防火墙状态：systemctl status firewalld</li>\n<li>设置开机启用防火墙：systemctl enable firewalld.service</li>\n<li>设置开机禁用防火墙：systemctl disable firewalld.service</li>\n<li>开启防火墙：systemctl start firewalld</li>\n<li>关闭防火墙：systemctl stop firewalld</li>\n</ul>\n<h2 id=\"环境变量\"><a class=\"markdownIt-Anchor\" href=\"#环境变量\">#</a> 环境变量</h2>\n<ul>\n<li>查看所有环境变量\n<ul>\n<li><code>env</code></li>\n</ul>\n</li>\n<li>环境变量生效\n<ul>\n<li><code>source /etc/profile</code></li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/SQL/Redis/",
            "url": "http://example.com/SQL/Redis/",
            "title": "Redis",
            "date_published": "2022-10-07T02:19:11.713Z",
            "content_html": "<h1 id=\"基础篇\"><a class=\"markdownIt-Anchor\" href=\"#基础篇\">#</a> 基础篇</h1>\n<h2 id=\"nosql\"><a class=\"markdownIt-Anchor\" href=\"#nosql\">#</a> NoSQL</h2>\n<h3 id=\"类型\"><a class=\"markdownIt-Anchor\" href=\"#类型\">#</a> 类型</h3>\n<ul>\n<li>键值类型</li>\n<li>文档类型</li>\n<li>列族类型</li>\n<li>Graph 类型</li>\n</ul>\n<h3 id=\"特点\"><a class=\"markdownIt-Anchor\" href=\"#特点\">#</a> 特点</h3>\n<ul>\n<li>数据结构：非结构化</li>\n<li>数据关联：无关联的</li>\n<li>查询方式：非 SQL</li>\n<li>事务特性：BASE</li>\n<li>基于内存</li>\n</ul>\n<h2 id=\"redis特征\"><a class=\"markdownIt-Anchor\" href=\"#redis特征\">#</a> Redis 特征</h2>\n<ul>\n<li>键值型，value 支持多种数据结构</li>\n<li>单线程，每个命令具有原子性</li>\n<li>低延迟，速度快（基于内存，IO 多路复用，良好的编码）</li>\n<li>支持数据持久化</li>\n<li>支持主从集群，分片集群</li>\n<li>支持多语言</li>\n</ul>\n<h2 id=\"安装redis\"><a class=\"markdownIt-Anchor\" href=\"#安装redis\">#</a> 安装 Redis</h2>\n<p><em>基于 linux 服务器来部署</em></p>\n<h3 id=\"单机安装redis\"><a class=\"markdownIt-Anchor\" href=\"#单机安装redis\">#</a> 单机安装 Redis</h3>\n<ul>\n<li>安装 Redis 依赖，是基于 c 编写的需要安装 gcc 依赖\n<ul>\n<li><code>yum install -y gcc tcl</code></li>\n</ul>\n</li>\n<li>从官网下载 tar 包，传输到 linux 的 <code>usr/local/src</code>  下面</li>\n<li>解压缩 <code>tar -zxvf +...</code></li>\n<li>进入到该解压的目录下面</li>\n<li>运行编译环境： <code>make &amp;&amp; make install</code></li>\n</ul>\n<p>默认安装路径是在  <code>/usr/local/bin</code>  下面</p>\n<ul>\n<li><code>redis-cli</code> ：命令行客户端</li>\n<li><code>redis-server</code> ：服务器启动端</li>\n<li><code>redis-sentinel</code> ：哨兵启动脚本</li>\n</ul>\n<h3 id=\"启动方式\"><a class=\"markdownIt-Anchor\" href=\"#启动方式\">#</a> 启动方式</h3>\n<h4 id=\"默认启动\"><a class=\"markdownIt-Anchor\" href=\"#默认启动\">#</a> 默认启动：</h4>\n<p><code>redis-server</code></p>\n<h4 id=\"指定配置文件启动\"><a class=\"markdownIt-Anchor\" href=\"#指定配置文件启动\">#</a> 指定配置文件启动</h4>\n<ul>\n<li><code>redis-server redis.conf</code></li>\n<li>先对修改文件进行备份： <code>cp redis.conf redis.conf.back</code></li>\n<li>修改 <code>redis.conf</code>  配置文件：</li>\n</ul>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#监听的地址，默认是 127.0.0.1 只能在本地访问，修改为 0.0.0.0 可以任意 IP 访问</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">bind</span> <span class=\"token value attr-value\">0.0.0.0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 守护进程，修改为 yes 可以在后台运行</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">daemonize</span> <span class=\"token value attr-value\">yes</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 设置访问的密码</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">requirepass</span> <span class=\"token value attr-value\">zhd1234567815</span></pre></td></tr></table></figure><p>其他配置项</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 监听的端口</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">port</span> <span class=\"token value attr-value\">6389</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 工作目录。默认是当前目录，也就是运行服务时的命令，日志持久化都在这个目录</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">dir</span> <span class=\"token value attr-value\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 数据库的数量，代表使用几个库，默认有 16 个库，编号为：0-15</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">database</span> <span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 设置 redis 能够使用的最大内存</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key attr-name\">maxmemory</span> <span class=\"token value attr-value\">512mb</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 日志文件，默认为空</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key attr-name\">logfile</span> <span class=\"token value attr-value\">\"redis.log\"</span></pre></td></tr></table></figure><p><strong>查看是否运行： <code>ps -ef|grep redis</code> </strong></p>\n<p><strong>结束： <code>kill -9 </code> 端口号或者 <code>redis-cli -u zhd1234567815 shutdown</code> </strong></p>\n<h4 id=\"开机自启\"><a class=\"markdownIt-Anchor\" href=\"#开机自启\">#</a> 开机自启</h4>\n<p>首先，新建一个文件服务系统</p>\n<ul>\n<li><code>vim /etc/systemd/system/redis.service</code></li>\n</ul>\n<p>写入内容：</p>\n<pre><code>[Unit]\nDescription=redis-server\nAfter=network.target\n\n[Service]\nType=forking\nExecStart=/usr/local/bin/redis-server /usr/local/src/redis-6.2.7/redis.conf\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>\n<p>重新加载服务： <code>systemctl daemon-reload</code></p>\n<h3 id=\"命令行客户端\"><a class=\"markdownIt-Anchor\" href=\"#命令行客户端\">#</a> 命令行客户端</h3>\n<ul>\n<li><code>redis-cli [options] [commonds]</code></li>\n<li><code>-h 127.0.0.1</code></li>\n<li><code>-p 6379</code></li>\n<li><code>-a zhd1234567815</code></li>\n<li>ping 是用来打招呼的</li>\n</ul>\n<h2 id=\"数据类型\"><a class=\"markdownIt-Anchor\" href=\"#数据类型\">#</a> 数据类型</h2>\n<ul>\n<li>基本类型：\n<ul>\n<li>String</li>\n<li>Hash</li>\n<li>List</li>\n<li>Set</li>\n<li>SortedSet</li>\n</ul>\n</li>\n<li>特殊类型：\n<ul>\n<li>GEO</li>\n<li>BitMap</li>\n<li>HyperLog</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"通用命令\"><a class=\"markdownIt-Anchor\" href=\"#通用命令\">#</a> 通用命令</h3>\n<ul>\n<li><code>keys pattern</code> ：查看符合的所有数据，* 代表多个，？代表一个</li>\n<li><code>DEL </code> ：删除一个指定的 key，或者多个，返回删除的数量，</li>\n<li><code>exists</code> ：判断 key 是否存在，不存在返回 0</li>\n<li><code>expire</code> ：给一个 key 设置有效期，单位秒，到期自动删除</li>\n<li><code>TTL</code> ：查询剩余有效期，-1 代表永久有效，-2 代表已删除</li>\n</ul>\n<h3 id=\"string\"><a class=\"markdownIt-Anchor\" href=\"#string\">#</a> String</h3>\n<p><em> <code>value</code>  也是字符串，但分为三类： <code>string</code> , <code>int</code> , <code>float</code> </em></p>\n<ul>\n<li><code>set</code> ：添加或者修改 string 类型的键值对</li>\n<li><code>get</code> ：根据 key 获取 value</li>\n<li><code>mset</code> ：批量添加多个键值对</li>\n<li><code>mget</code> ：根据多个 key 获得多个 string 类型的 value</li>\n<li><code>incr</code> ：让一个整型的 key 自增 1</li>\n<li><code>incrby</code> ：让一个整型的 key 自增，并指定步长</li>\n<li><code>incrbyfloat</code> ：让一个浮点类型的数字的自增，并指定步长</li>\n<li><code>setnx</code> ：添加一个 string 类型的键值对，若 key 存在，则不执行</li>\n<li><code>setex</code> ：添加一个 string 类型的键值对，并指定有效期</li>\n</ul>\n<h3 id=\"hash\"><a class=\"markdownIt-Anchor\" href=\"#hash\">#</a> Hash</h3>\n<p><em>散列， <code>value</code>  是一个无需字典</em></p>\n<ul>\n<li><code>HSET key field value</code> ：添加或者修改 hash 类型 key 的 field 的值</li>\n<li><code>HGET key field</code> ：获取一个 hash 类型 key 的 field 的值</li>\n<li><code>HMSET</code> ：批量添加多个 hash 类型 key 的 field 的值</li>\n<li><code>HMGET</code> ：批量获取多个 hash 类型 key 的 field 的值</li>\n<li><code>HGETALL</code> ：获取一个 hash 类型的 key 的所有的 field 和 value</li>\n<li><code>HKEYS</code> ：获取一个 hash 类型的 key 的所有的 field</li>\n<li><code>HVALS</code> ：获取一个 hash 类型的 key 的所有的 value</li>\n<li><code>HINCRBY</code> ：让一个 hash 类型的 key 的字段值自增并指定步长</li>\n<li><code>HSETNX</code> ：添加一个 hash 类型的 key 的 field，前提是这个 field 不存在，否则不执行</li>\n</ul>\n<h3 id=\"list\"><a class=\"markdownIt-Anchor\" href=\"#list\">#</a> List</h3>\n<p><em>类似于 <code>java</code>  中 <code>linkedlist</code> ，可以看作上双向链表，</em></p>\n<ul>\n<li>有序</li>\n<li>元素可以重复</li>\n<li>插入和删除快</li>\n<li>查询速度一般</li>\n</ul>\n<p>命令：</p>\n<ul>\n<li><code>LPUSH key element</code> ：向列表左侧插入一个或多个元素</li>\n<li><code>LPOP key</code> ：移除并返回列表左侧的第一个元素，没有则返回 <code>nil</code></li>\n<li><code>RPUSH key element</code> ：向列表右侧插入一个或者多个元素</li>\n<li><code>RPOP key</code> ：移除并返回列表右侧的第一个元素</li>\n<li><code>LRANGE key star end</code> ：返回一段角标范围内的所有元素</li>\n<li><code>BLPOP和BRPOP</code> ：与 <code>LPOP</code>  和 <code>RPOP</code>  类似，只不过没有等待指定时间，而不是直接返回 <code>nil</code></li>\n</ul>\n<h3 id=\"set\"><a class=\"markdownIt-Anchor\" href=\"#set\">#</a> Set</h3>\n<p><em>与 <code>java</code>  中的 <code>hashset</code>  类似，可以看作一个 <code>value</code>  是 <code>null</code>  的 <code>hashmap</code> </em></p>\n<ul>\n<li>无序</li>\n<li>元素不可重复</li>\n<li>查找快</li>\n<li>支持交集，并集，差集等功能</li>\n</ul>\n<p>命令：</p>\n<ul>\n<li><code>SADD key member</code> ：向 set 中添加一个或者多个元素</li>\n<li><code>SREM key member</code> ：移除 set 中的指定元素</li>\n<li><code>SCARD key</code> ：返回 set 中元素的个数</li>\n<li><code>SISMEMBER</code> ：判断一个元素是否存在于 set 中</li>\n<li><code>SMEMBERS</code> ：获取 set 中的所有元素</li>\n<li><code>SINTER key1 key2</code> ：求两个键的交集</li>\n<li><code>SDIFF key1 key2</code> ：求两个键的差集</li>\n<li><code>SUNION key1 key2</code> ：求两个键的并集</li>\n</ul>\n<h3 id=\"sortedset\"><a class=\"markdownIt-Anchor\" href=\"#sortedset\">#</a> SortedSet</h3>\n<p><em>是一个可排序的 <code>set</code>  集合，每一个元素都带有一个 score 属性，可以基于 <code>score</code>  属性对元素进行排序，底层是一个跳表（SkipList）加 hash 表</em></p>\n<ul>\n<li>可排序</li>\n<li>元素不重复</li>\n<li>查询速度快</li>\n</ul>\n<p>命令：</p>\n<p><em>所有排名默认是升序，在 Z 的后面加上 REV 即可成为降序</em></p>\n<ul>\n<li><code>ZADD key score member</code> ：向 sorted set 中添加一个或者多个元素，如果已存在，则更新 <code>score</code>  的值</li>\n<li><code>ZREM key member</code> ：移除 sorted set 中的指定元素</li>\n<li><code>ZSCORE key member</code> ：获取 sorted set 中指定元素的 score</li>\n<li><code>ZRANK key member</code> ：获取 sorted set 中指定元素的排名</li>\n<li><code>ZCARD key</code> ：返回 sorted set 中元素的个数</li>\n<li><code>ZCOUNT key min max</code> ：统计 score 值在给定范围内的所有元素</li>\n<li><code>ZINCRBY key increment member</code> ：让 sorted set 中指定的元素自增，步长为指定的 <code>increment</code></li>\n<li><code>ZRANK key min max</code> ：按照 score 排序后，获取指定排名的元素</li>\n<li><code>ZRANGEBYSCORE key min max</code> ：按照 score 排序后，获取指定 score 范围内的元素</li>\n<li><code>ZINTER key1 key2</code> ：求两个键的交集</li>\n<li><code>ZDIFF key1 key2</code> ：求两个键的差集</li>\n<li><code>ZUNION key1 key2</code> ：求两个键的并集</li>\n</ul>\n<h2 id=\"key的层级形式\"><a class=\"markdownIt-Anchor\" href=\"#key的层级形式\">#</a> key 的层级形式</h2>\n<p><em>eg：项目名：业务名：类型：id</em></p>\n<p><code>:</code>  会形成层级结构</p>\n<h2 id=\"redis的java客户端\"><a class=\"markdownIt-Anchor\" href=\"#redis的java客户端\">#</a> Redis 的 Java 客户端</h2>\n",
            "tags": [
                "语言",
                "SQL",
                "SQL"
            ]
        },
        {
            "id": "http://example.com/language/%E6%95%B0%E6%8D%AE%E5%BA%93/PyMySQL/",
            "url": "http://example.com/language/%E6%95%B0%E6%8D%AE%E5%BA%93/PyMySQL/",
            "title": "PyMySQL",
            "date_published": "2022-09-30T02:13:21.532Z",
            "content_html": "<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pymysql</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 打开数据库连接</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>db <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token string\">'123456'</span><span class=\"token punctuation\">,</span> database<span class=\"token operator\">=</span><span class=\"token string\">'runoob_db'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 使用 cursor () 方法创建一个游标对象 cursor</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cursor <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 使用 execute ()  方法执行 SQL 查询</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT VERSION()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 使用 fetchone () 方法获取单条数据.</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>data <span class=\"token operator\">=</span> cursor<span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Database version : %s \"</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 关闭数据库连接</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>db<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/language/%E6%95%B0%E6%8D%AE%E5%BA%93/my-connection/",
            "url": "http://example.com/language/%E6%95%B0%E6%8D%AE%E5%BA%93/my-connection/",
            "title": "mysql-connection",
            "date_published": "2022-09-30T02:10:12.354Z",
            "content_html": "<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># import mysql.connector</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># # 连接数据库</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># mydb = mysql.connector.connect(host='localhost', user='root', passwd='123456')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># # 查看数据库是否连接</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># print(mydb)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># my_cursor = mydb.cursor()</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># # 显示数据库表中表的列信息</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('describe sites')</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># --------------------DDL(Create,DROP,ALTER)--------------------</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># ---------- 对数据库的操作 ----------</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># # 创建数据库</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('create database if not exists runoob_db')</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># # 删除数据库</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('drop database if exists runoob_db')</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># # 查询说有数据库</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('show databases')</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># # 使用数据库</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('use runoob_db')</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># # 刷新数据库</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('flush privileges')</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># ---------- 对数据库当中的表的操作 ----------</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># # 查询当前数据库下的表</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('show tables')</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># # 创建数据库的表</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('create table if not exists sites(name VARCHAR(255),url VARCHAR(255));')</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('create table if not exists sites(name VARCHAR(255),url VARCHAR(255))charset=utf8')</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># # 修改表</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('alter table sites rename as site')</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># # 从外部添加主键设置</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('alter table sites add column id int auto_increment primary key')</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># 修改字段 ToDO</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('alter table `site` modify `name`')</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('alter table `site` change `name` `names` VARCHAR(255)')</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\"># 删除字段</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('drop table if exists sites')</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\"># --------------------DML(INSERT,UPDATE,DELETE)--------------------</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># # 插入单条数据</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># sql = 'insert into site (name,url) VALUES (%s,%s)'</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\"># val = ('zhd', 'http')</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># my_cursor.execute(sql,val)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># mydb.commit () # DML 都需要提交</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\"># print (my_cursor.rowcount, \"记录插入成功。\")</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\"># print (my_cursor.rowcount, \"记录插入成功。,ID:\",my_cursor.lastrowid)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\"># # 插入多条数据</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\"># sql = 'insert into site (name,url) VALUES (%s,%s)'</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># val = [</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">#     ('Google', 'https://www.google.com'),</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">#     ('Github', 'https://www.github.com'),</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">#     ('Taobao', 'https://www.taobao.com'),</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token comment\">#     ('stackoverflow', 'https://www.stackoverflow.com/')</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\"># ]</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\"># my_cursor.executemany(sql,val)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token comment\"># mydb.commit () # DML 都需要提交</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token comment\"># print (my_cursor.rowcount, \"记录插入成功。\")</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token comment\"># # 更新表的数据</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\"># sql='update site set name=%s where name =%s'</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\"># val = (\"Zhihu\", \"ZH\")</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\"># my_cursor.execute(sql, val)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\"># mydb.commit()</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token comment\"># print (my_cursor.rowcount, \"条记录被修改\")</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\"># # 删除数据</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\"># sql='delete from `site` where `name` = \"stackoverflow\"'</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\"># 防止 SQl 注入</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\"># sql='delete from `site` where `name` = %s'</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token comment\"># na=(\"stackoverflow\",)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token comment\"># my_cursor.execute(sql,na)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token comment\"># mydb.commit()</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token comment\"># print (my_cursor.rowcount, \"条记录删除\")</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token comment\"># --------------------DQL(SELECT)--------------------</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token comment\"># # 查询所有数据</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('select * from site')</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token comment\"># my_result = my_cursor.fetchall ()  # 查询所有记录</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token comment\"># for x in my_result:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token comment\">#     print(x)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token comment\"># # 查询指定数据</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token comment\"># my_cursor.execute('select `name`,`url` from site')</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token comment\"># my_result = my_cursor.fetchall()</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token comment\"># for x in my_result:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token comment\">#     print(x)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token comment\"># # 读取第一条数据</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token comment\"># my_cursor.execute(\"SELECT * FROM site\")</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token comment\"># my_result = my_cursor.fetchone()</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token comment\"># print(my_result)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token comment\"># # 根据条件查找</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token comment\"># # sql = \"select * from `site` where `name`='zhd'\"</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token comment\"># 为了防止数据库查询发生 SQL 注入问题，使用 % s 占位符转义查询</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token comment\"># sql = \"SELECT * FROM `site` WHERE `url` LIKE '%oo%'\"</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token comment\"># my_cursor.execute(sql)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token comment\"># my_result = my_cursor.fetchall()</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token comment\"># for x in my_result:</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token comment\">#     print(x)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token comment\"># --------------------DCL(GRANT,COMMIT,ROLLBACK)--------------------</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token comment\"># for x in my_cursor:</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token comment\">#     print(x)</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/language/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96%E9%A6%99%E4%B9%A6%E5%B0%8F%E8%AF%B4/",
            "url": "http://example.com/language/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96%E9%A6%99%E4%B9%A6%E5%B0%8F%E8%AF%B4/",
            "title": "爬取香书小说",
            "date_published": "2022-09-30T01:50:35.072Z",
            "content_html": "<p><em>采用多进程下载香书小说</em></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> multiprocessing <span class=\"token keyword\">import</span> Process</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> os <span class=\"token keyword\">import</span> getpid</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> urllib<span class=\"token punctuation\">.</span>request <span class=\"token keyword\">import</span> Request<span class=\"token punctuation\">,</span> urlopen</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> lxml <span class=\"token keyword\">import</span> etree</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> gzip</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 请求头消息</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>header <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">'Cookie'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'_abcde_qweasd=0; _abcde_qweasd=0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string\">'Connection'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'keep-alive'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token string\">'Accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 根据给出的 url 地址解析文本</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">func_url_gzip</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"从给定的url爬取当前网页，返回文本，利用gzip解压缩\"\"\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    request <span class=\"token operator\">=</span> Request<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>header<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    response <span class=\"token operator\">=</span> urlopen<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    text <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    deco_resp <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        deco_resp <span class=\"token operator\">=</span> gzip<span class=\"token punctuation\">.</span>decompress<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        deco_resp <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span> deco_resp</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">download_novel</span><span class=\"token punctuation\">(</span>novel_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"下载每本小说\"\"\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'开始下载</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>novel_list<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">端口号：</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>getpid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># 判断该书是否下载</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'../日志/download-logs.txt'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> log<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        read <span class=\"token operator\">=</span> log<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    judge <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">for</span> value <span class=\"token keyword\">in</span> read<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">if</span> novel_list<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> value<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            judge <span class=\"token operator\">=</span> value</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">if</span> judge <span class=\"token operator\">!=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        read_index <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>judge<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>novel_list<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">下载到第'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'章'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        read_index <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'小说/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>novel_list<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.txt'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a+'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> book<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        catalogs_ele <span class=\"token operator\">=</span> etree<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">(</span>text<span class=\"token operator\">=</span>func_url_gzip<span class=\"token punctuation\">(</span>novel_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token comment\"># 爬取小说的所有目录</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        catalogs_name <span class=\"token operator\">=</span> catalogs_ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//div[@id='list']/dl/dd/a/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token comment\"># 爬取小说的目录 url</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        catalogs_url <span class=\"token operator\">=</span> catalogs_ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//div[@id='list']/dl/dd/a/@href\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token comment\"># 将所有目录内容爬取到 txt</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">for</span> catalog_index <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>catalogs_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token keyword\">if</span> catalog_index <span class=\"token operator\">&lt;</span> read_index <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            path <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.xbiquge.la'</span> <span class=\"token operator\">+</span> catalogs_url<span class=\"token punctuation\">[</span>catalog_index<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            content <span class=\"token operator\">=</span> etree<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">(</span>text<span class=\"token operator\">=</span>func_url_gzip<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//div[@id='content']/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'../日志/download-logs.txt'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a+'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> logs<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                logs<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>novel_list<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">下载到第</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>catalog_index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">章\\n'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            book<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>catalogs_name<span class=\"token punctuation\">[</span>catalog_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token comment\"># 给出要爬取的网址，返回响应文本</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    url <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.xbiquge.la/xiaoshuodaquan'</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token comment\"># 根据给出的文本，找到对应的查找小说书籍</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    ele <span class=\"token operator\">=</span> etree<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">(</span>text<span class=\"token operator\">=</span>func_url_gzip<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token comment\"># 爬取所有小说的书名</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    novels_name <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//div[@class='novellist']/ul/li/a/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token comment\"># 爬取所有小说的 url 地址</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    novels_url <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//div[@class='novellist']/ul/li/a/@href\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    novels_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>novels_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        novels_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>novels_url<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> novels_name<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>novels_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            pros_1 <span class=\"token operator\">=</span> Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>download_novel<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>novels_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            pros_1<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            pros_2 <span class=\"token operator\">=</span> Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>download_novel<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>novels_list<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            pros_2<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            pros_3 <span class=\"token operator\">=</span> Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>download_novel<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>novels_list<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            pros_3<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            pros_4 <span class=\"token operator\">=</span> Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>download_novel<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>novels_list<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            pros_4<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            pros_5 <span class=\"token operator\">=</span> Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>download_novel<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>novels_list<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            pros_5<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            pros_6 <span class=\"token operator\">=</span> Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>download_novel<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>novels_list<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            pros_6<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            pros_7 <span class=\"token operator\">=</span> Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>download_novel<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>novels_list<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            pros_7<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            pros_8 <span class=\"token operator\">=</span> Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>download_novel<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>novels_list<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            pros_8<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            pros_9 <span class=\"token operator\">=</span> Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>download_novel<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>novels_list<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            pros_9<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            pros_10 <span class=\"token operator\">=</span> Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>download_novel<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>novels_list<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            pros_10<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            pros_1<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            pros_2<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            pros_3<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            pros_4<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            pros_5<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            pros_6<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            pros_7<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            pros_8<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            pros_9<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            pros_10<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/language/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96%E5%BD%BC%E5%B2%B8%E5%9B%BE%E7%BD%91/",
            "url": "http://example.com/language/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96%E5%BD%BC%E5%B2%B8%E5%9B%BE%E7%BD%91/",
            "title": "爬取彼岸图网",
            "date_published": "2022-09-30T01:49:40.740Z",
            "content_html": "<h2 id=\"设置请求头\"><a class=\"markdownIt-Anchor\" href=\"#设置请求头\">#</a> 设置请求头</h2>\n<blockquote>\n<p>headers.txt</p>\n</blockquote>\n<pre><code>accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\naccept-encoding: gzip, deflate, br\naccept-language: zh-CN,zh;q=0.9,en-CN;q=0.8,en;q=0.7\ncache-control: no-cache\nupgrade-insecure-requests: 1\nuser-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36\n</code></pre>\n<blockquote>\n<p>log.txt</p>\n</blockquote>\n<pre><code>0,1\n</code></pre>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 创建请求头消息</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> lxml <span class=\"token keyword\">import</span> etree</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> 爬虫<span class=\"token punctuation\">.</span>工具类<span class=\"token punctuation\">.</span>字符串转字典 <span class=\"token keyword\">import</span> from_str_to_dict</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> 爬虫<span class=\"token punctuation\">.</span>工具类<span class=\"token punctuation\">.</span>从给定的url获取cookies <span class=\"token keyword\">import</span> from_url_get_cookies</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'headers.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> head<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    headers <span class=\"token operator\">=</span> from_str_to_dict<span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>img_header <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token string\">'user-agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    pages <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">''</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    pages<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string-interpolation\"><span class=\"token string\">f'_</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1052</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    count <span class=\"token operator\">=</span> <span class=\"token number\">12430</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    logs_index <span class=\"token operator\">=</span> <span class=\"token number\">621</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">for</span> page_index<span class=\"token punctuation\">,</span> page <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>pages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> page_index <span class=\"token operator\">&lt;</span> logs_index<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://pic.netbian.com/index</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.html'</span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        get_cookies <span class=\"token operator\">=</span> from_url_get_cookies<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        response_encode <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span> cookies<span class=\"token operator\">=</span>get_cookies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        response <span class=\"token operator\">=</span> response_encode<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'gbk'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        ele <span class=\"token operator\">=</span> etree<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        img_urls <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//ul[@class='clearfix']/li/a/@href\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">for</span> img_page <span class=\"token keyword\">in</span> img_urls<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            path <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://pic.netbian.com</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>img_page<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            img_resp <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>path<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span> cookies<span class=\"token operator\">=</span>from_url_get_cookies<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                img_resp <span class=\"token operator\">=</span> img_resp<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'gbk'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'出错了'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            img_ele <span class=\"token operator\">=</span> etree<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">(</span>img_resp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            img_page_url <span class=\"token operator\">=</span> img_ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//div[@class='photo-pic']/a/img/@src\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            img_page_name <span class=\"token operator\">=</span> img_ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//div[@class='photo-pic']/a/img/@alt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            img_page_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://pic.netbian.com</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>img_page_url<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>img_page_name<span class=\"token punctuation\">,</span> img_page_url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            img_page_name <span class=\"token operator\">=</span> img_page_name<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'?'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token string\">'> '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'《'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'》'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'|'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"F:\\pycharm\\work\\pythonProject\\爬虫\\爬取彼岸图网\\图库\\\\</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>img_page_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.jpg\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> stream<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                stream<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>img_page_url<span class=\"token punctuation\">,</span> img_header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token comment\">#     with open(f'log.txt', 'w', encoding='utf-8') as log:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token comment\">#         logs = log.write(f'&#123;page_index&#125;,&#123;index&#125;\\n')</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"正在保存第</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>count<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token comment\">#     break</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\"># break</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/language/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96wallhaven/",
            "url": "http://example.com/language/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96wallhaven/",
            "title": "爬取wallhaven",
            "date_published": "2022-09-30T01:48:46.147Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "http://example.com/language/%E7%88%AC%E8%99%AB/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E4%BB%8E%E7%BB%99%E5%AE%9A%E7%9A%84url%E7%88%AC%E5%8F%96cookies/",
            "url": "http://example.com/language/%E7%88%AC%E8%99%AB/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E4%BB%8E%E7%BB%99%E5%AE%9A%E7%9A%84url%E7%88%AC%E5%8F%96cookies/",
            "title": "从给定的url获取cookies",
            "date_published": "2022-09-30T01:38:05.065Z",
            "content_html": "<h2 id=\"从给定的url获取cookies\"><a class=\"markdownIt-Anchor\" href=\"#从给定的url获取cookies\">#</a> 从给定的 url 获取 cookies</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> fake_useragent <span class=\"token keyword\">import</span> UserAgent</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># fake-useragent-0.1.11</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">from_url_get_cookies</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> ip<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"从给定的网址，获取cookies\"\"\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    us <span class=\"token operator\">=</span> UserAgent<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>chrome</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>us<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    cookies <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'Cookie'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    resp <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> ip <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        resp <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">elif</span> ip <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        resp <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span> proxies<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">:</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>ip<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>port<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> resp<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span>get_dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\"># print(key, value)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        cookies<span class=\"token punctuation\">[</span><span class=\"token string\">'Cookie'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>key<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">;'</span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> us<span class=\"token punctuation\">,</span> cookies</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># return resp.cookies.get_dict()</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>from_url_get_cookies<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/language/%E7%88%AC%E8%99%AB/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E5%88%9B%E5%BB%BA%E4%BB%A3%E7%90%86IP%E6%B1%A0/",
            "url": "http://example.com/language/%E7%88%AC%E8%99%AB/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E5%88%9B%E5%BB%BA%E4%BB%A3%E7%90%86IP%E6%B1%A0/",
            "title": "代理IP池",
            "date_published": "2022-09-30T01:28:57.869Z",
            "content_html": "<h1 id=\"存入txt版本\"><a class=\"markdownIt-Anchor\" href=\"#存入txt版本\">#</a> 存入 txt 版本</h1>\n<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h2>\n<ul>\n<li>获取请求头</li>\n<li>根据请求头分别从三个网站爬取 IP</li>\n<li>当 IP 池的数量达到设定数目时，停止爬取，等待后继续爬取</li>\n<li>将爬取的 IP 存入数据库，</li>\n<li>从数据库中获取 IP</li>\n</ul>\n<h2 id=\"headers\"><a class=\"markdownIt-Anchor\" href=\"#headers\">#</a> Headers</h2>\n<p><em>设置爬取三个网站的请求头信息</em></p>\n<blockquote>\n<p>89ip-cookies.txt</p>\n</blockquote>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,<span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">/</span><span class=\"token punctuation\">*</span></span>;q=0.8,application/signed-exchange;v=b3;q=0.9</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>accept-encoding: gzip, deflate, br</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>accept-language: zh-CN,zh;q=0.9,en-CN;q=0.8,en;q=0.7</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cache-control: no-cache</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cookie: https_waf_cookie=c80bf1dd-253c-41adf37e4954e1866f96b92123fecbf18a1e; Hm_lvt_f9e56acddd5155c92b9b5499ff966848=1663820814; http_waf_cookie=8e5d5460-0e7b-426915d4f4767026c699084b0c5e59493750; Hm_lpvt_f9e56acddd5155c92b9b5499ff966848=1663895014</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>pragma: no-cache</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sec-ch-ua: \"Google Chrome\";v=\"105\", \"Not)A;Brand\";v=\"8\", \"Chromium\";v=\"105\"</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sec-ch-ua-mobile: ?0</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>sec-ch-ua-platform: \"Windows\"</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sec-fetch-dest: document</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sec-fetch-mode: navigate</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>sec-fetch-site: none</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sec-fetch-user: ?1</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>upgrade-insecure-requests: 1</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</pre></td></tr></table></figure><blockquote>\n<p>ip3366-cookies.txt</p>\n</blockquote>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,<span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">/</span><span class=\"token punctuation\">*</span></span>;q=0.8,application/signed-exchange;v=b3;q=0.9</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Accept-Encoding: gzip, deflate</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Accept-Language: zh-CN,zh;q=0.9,en-CN;q=0.8,en;q=0.7</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Cache-Control: no-cache</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Connection: keep-alive</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Cookie: Hm_lvt_c4dd741ab3585e047d56cf99ebbbe102=1663829157; ASPSESSIONIDSQSTQQAA=JHPLJGACKJLIGIOFKCNFPOLP; Hm_lpvt_c4dd741ab3585e047d56cf99ebbbe102=1663894946</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Host: www.ip3366.net</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Pragma: no-cache</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Referer: http://www.ip3366.net/free/?stype=1&amp;page=7</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Upgrade-Insecure-Requests: 1</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</pre></td></tr></table></figure><blockquote>\n<p>kuaiDaiLi.txt</p>\n</blockquote>\n<pre><code>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nAccept-Encoding: gzip, deflate, br\nAccept-Language: zh-CN,zh;q=0.9,en-CN;q=0.8,en;q=0.7\nCache-Control: no-cache\nConnection: keep-alive\nCookie: _ga=GA1.2.1041225934.1663815681; _gcl_au=1.1.455711954.1663815682; channelid=0; Hm_lvt_7ed65b1cc4b810e9fd37959c9bb51b31=1663815680,1664175618; _gid=GA1.2.1619146741.1664175618; sid=1664174551138290; Hm_lpvt_7ed65b1cc4b810e9fd37959c9bb51b31=1664175620\nHost: www.kuaidaili.com\nPragma: no-cache\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36\n</code></pre>\n<h2 id=\"ip_pool\"><a class=\"markdownIt-Anchor\" href=\"#ip_pool\">#</a> IP_Pool</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pickle</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> lxml <span class=\"token keyword\">import</span> etree</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> 爬虫<span class=\"token punctuation\">.</span>工具类<span class=\"token punctuation\">.</span>字符串转字典 <span class=\"token keyword\">import</span> from_str_to_dict</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span> multiprocessing <span class=\"token keyword\">import</span> Process<span class=\"token punctuation\">,</span>Lock</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">IpPool</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    ip_pool <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            self<span class=\"token punctuation\">.</span>detect_ip_pool<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            self<span class=\"token punctuation\">.</span>detect_ip_count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'F:\\pycharm\\work\\pythonProject\\爬虫\\工具类\\IpPool.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb+'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> stream<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                pickle<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">,</span> stream<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            sleep<span class=\"token punctuation\">(</span><span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_ip_from_kuaiDaiLi</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> poor_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"从快代理网站获取IP\"\"\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> poor_size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'F:\\pycharm\\work\\pythonProject\\爬虫\\工具类\\cookies\\kuaiDaiLi.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cookie<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            head <span class=\"token operator\">=</span> from_str_to_dict<span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">for</span> page <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            page_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://www.kuaidaili.com/free/inha/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/'</span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            resp <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>page_url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            ele <span class=\"token operator\">=</span> etree<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            ip_address <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//tbody/tr/td[1]/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            port_address <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//tbody/tr/td[2]/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ip_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                ip <span class=\"token operator\">=</span> ip_address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                port <span class=\"token operator\">=</span> port_address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> poor_size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>detect_ip<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                    IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">[</span>ip<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> port</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"快代理该ip可用\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"快代理该ip不可用\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_ip_from_ip3366</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> poor_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"从云代理网站获取IP\"\"\"</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> poor_size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'F:\\pycharm\\work\\pythonProject\\爬虫\\工具类\\cookies\\ip3366-cookies.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cookie<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            head <span class=\"token operator\">=</span> from_str_to_dict<span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">for</span> page <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            page_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'http://www.ip3366.net/free/?stype=1&amp;page=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            resp <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>page_url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'gb2312'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            ele <span class=\"token operator\">=</span> etree<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            ip_address <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//tbody/tr/td[1]/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            port_address <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//tbody/tr/td[2]/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ip_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                ip <span class=\"token operator\">=</span> ip_address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                port <span class=\"token operator\">=</span> port_address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> poor_size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>detect_ip<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                    IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">[</span>ip<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> port</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3366该ip可用\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3366该ip不可用\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_ip_from_89ip</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> poor_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"从89代理网站获取IP\"\"\"</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> poor_size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'F:\\pycharm\\work\\pythonProject\\爬虫\\工具类\\cookies\\89ip-cookies.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cookie<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            head <span class=\"token operator\">=</span> from_str_to_dict<span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">for</span> page <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            page_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://www.89ip.cn/index_</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.html'</span></span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            resp <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>page_url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            ele <span class=\"token operator\">=</span> etree<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            ip_address <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//tbody/tr/td[1]/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            port_address <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//tbody/tr/td[2]/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ip_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                ip <span class=\"token operator\">=</span> ip_address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                port <span class=\"token operator\">=</span> port_address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> poor_size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>detect_ip<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                    IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">[</span>ip<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> port</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"89ip该ip可用\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"89ip该ip不可用\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">detect_ip</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"判断IP是否可用\"\"\"</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        header <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span><span class=\"token string\">'http://httpbin.org'</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>header<span class=\"token punctuation\">,</span> proxies<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">:</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>ip<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>port<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">detect_ip_count</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"判断IP池中的数量\"\"\"</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        poor_size <span class=\"token operator\">=</span> <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> poor_size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            self<span class=\"token punctuation\">.</span>get_ip_from_kuaiDaiLi<span class=\"token punctuation\">(</span>poor_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            self<span class=\"token punctuation\">.</span>get_ip_from_89ip<span class=\"token punctuation\">(</span>poor_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            self<span class=\"token punctuation\">.</span>get_ip_from_ip3366<span class=\"token punctuation\">(</span>poor_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">detect_ip_pool</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"检测IP池中是否可用\"\"\"</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>            <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token keyword\">for</span> ip<span class=\"token punctuation\">,</span> port <span class=\"token keyword\">in</span> IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>detect_ip<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>                tmp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tmp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>                <span class=\"token keyword\">del</span> IpPool<span class=\"token punctuation\">.</span>ip_pool<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    IpPool<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"从指定位置获取ip\"><a class=\"markdownIt-Anchor\" href=\"#从指定位置获取ip\">#</a> 从指定位置获取 IP</h2>\n<h2 id=\"从数据库中查询\"><a class=\"markdownIt-Anchor\" href=\"#从数据库中查询\">#</a> 从数据库中查询</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_ip_from_Pool</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    my_conn <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    results <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        my_conn <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">3308</span><span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> database<span class=\"token operator\">=</span><span class=\"token string\">'ip_pool'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        my_cursor <span class=\"token operator\">=</span> my_conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'select `ip`,`port` from `pools`'</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        my_cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        results <span class=\"token operator\">=</span> my_cursor<span class=\"token punctuation\">.</span>fetchmany<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'数据库查找失误'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        my_conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> ip_port <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\"># print(ip, port)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">yield</span> ip_port<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ip_port<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h2 id=\"存入代码\"><a class=\"markdownIt-Anchor\" href=\"#存入代码\">#</a> 存入代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pickle</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">IpPoolExecutor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> count</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">from_ip_pools_to_ip</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'F:\\pycharm\\work\\pythonProject\\爬虫\\工具类\\ip池.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> stream<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            ip_pool <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">for</span> ip<span class=\"token punctuation\">,</span> port <span class=\"token keyword\">in</span> ip_pool<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">yield</span> ip<span class=\"token punctuation\">,</span> port</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getIp_from_IpPool</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'F:\\pycharm\\work\\pythonProject\\爬虫\\工具类\\IpPool.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> stream<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            ip_pool <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">for</span> ip<span class=\"token punctuation\">,</span> port <span class=\"token keyword\">in</span> ip_pool<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token comment\"># print(ip, port)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">yield</span> ip<span class=\"token punctuation\">,</span> port</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    executor <span class=\"token operator\">=</span> IpPoolExecutor<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>getIp_from_IpPool<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>executor<span class=\"token punctuation\">.</span>__next__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>executor<span class=\"token punctuation\">.</span>__next__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>executor<span class=\"token punctuation\">.</span>__next__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>executor<span class=\"token punctuation\">.</span>__next__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>executor<span class=\"token punctuation\">.</span>__next__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"存入mysql版本\"><a class=\"markdownIt-Anchor\" href=\"#存入mysql版本\">#</a> 存入 MySQL 版本</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> lxml <span class=\"token keyword\">import</span> etree</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> 爬虫<span class=\"token punctuation\">.</span>工具类<span class=\"token punctuation\">.</span>字符串转字典 <span class=\"token keyword\">import</span> from_str_to_dict</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> pymysql</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">IpPool</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> poor_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\"># 给定池子的大小</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        self<span class=\"token punctuation\">.</span>poor_size <span class=\"token operator\">=</span> poor_size</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\"># 每五分钟从数据库获取一次池子</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            self<span class=\"token punctuation\">.</span>get_pool<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\"># 检测池子中的 IP 是否可用</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            self<span class=\"token punctuation\">.</span>deny_size <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>detect_pool<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>deny_size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'当前可用IP均可用'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">elif</span> self<span class=\"token punctuation\">.</span>deny_size <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token comment\"># 爬取 IP</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    self<span class=\"token punctuation\">.</span>get_ip_from_kuaiDaiLi<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                        self<span class=\"token punctuation\">.</span>get_ip_from_89ip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                            self<span class=\"token punctuation\">.</span>get_ip_from_ip3366<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'出错了'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            sleep<span class=\"token punctuation\">(</span><span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">save_to_pool</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"将可用的IP存储到数据库\"\"\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        my_conn <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            my_conn <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">3308</span><span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> database<span class=\"token operator\">=</span><span class=\"token string\">'ip_pool'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            my_cursor <span class=\"token operator\">=</span> my_conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'insert into pools (`ip`, `port`) VALUES (\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>ip<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\",\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>port<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\")'</span></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            my_cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            my_conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'添加成功'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'数据库添加失误'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            my_conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_ip_from_kuaiDaiLi</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"从快代理网站获取IP\"\"\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'F:\\pycharm\\work\\pythonProject\\爬虫\\工具类\\cookies\\kuaiDaiLi.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cookie<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            head <span class=\"token operator\">=</span> from_str_to_dict<span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">for</span> page <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            page_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://www.kuaidaili.com/free/inha/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/'</span></span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            resp <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>page_url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            ele <span class=\"token operator\">=</span> etree<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            ip_address <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//tbody/tr/td[1]/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            port_address <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//tbody/tr/td[2]/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ip_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>deny_size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                ip <span class=\"token operator\">=</span> ip_address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                port <span class=\"token operator\">=</span> port_address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>detect_ip<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                    self<span class=\"token punctuation\">.</span>save_to_pool<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"快代理该ip可用\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                    self<span class=\"token punctuation\">.</span>deny_size <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"快代理该ip不可用\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_ip_from_ip3366</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"从云代理网站获取IP\"\"\"</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'F:\\pycharm\\work\\pythonProject\\爬虫\\工具类\\cookies\\ip3366-cookies.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cookie<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            head <span class=\"token operator\">=</span> from_str_to_dict<span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">for</span> page <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            page_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'http://www.ip3366.net/free/?stype=1&amp;page=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            resp <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>page_url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'gb2312'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            ele <span class=\"token operator\">=</span> etree<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            ip_address <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//tbody/tr/td[1]/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            port_address <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//tbody/tr/td[2]/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ip_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>deny_size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                ip <span class=\"token operator\">=</span> ip_address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                port <span class=\"token operator\">=</span> port_address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>detect_ip<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                    self<span class=\"token punctuation\">.</span>save_to_pool<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3366该ip可用\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                    self<span class=\"token punctuation\">.</span>deny_size <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3366该ip不可用\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_ip_from_89ip</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"从89代理网站获取IP\"\"\"</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'F:\\pycharm\\work\\pythonProject\\爬虫\\工具类\\cookies\\89ip-cookies.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cookie<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            head <span class=\"token operator\">=</span> from_str_to_dict<span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token keyword\">for</span> page <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            page_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://www.89ip.cn/index_</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.html'</span></span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            resp <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>page_url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            ele <span class=\"token operator\">=</span> etree<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            ip_address <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//tbody/tr/td[1]/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            port_address <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//tbody/tr/td[2]/text()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ip_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>deny_size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                ip <span class=\"token operator\">=</span> ip_address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                port <span class=\"token operator\">=</span> port_address<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>detect_ip<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                    self<span class=\"token punctuation\">.</span>save_to_pool<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"89ip该ip可用\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                    self<span class=\"token punctuation\">.</span>deny_size <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"89代理该ip不可用\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">detect_ip</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> ip<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"判断IP是否可用\"\"\"</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        header <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>            <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>            requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span><span class=\"token string\">'http://httpbin.org'</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>header<span class=\"token punctuation\">,</span> proxies<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">:</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>ip<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>port<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_pool</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"从数据库获取IP池\"\"\"</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        my_conn <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>            my_conn <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">3308</span><span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> database<span class=\"token operator\">=</span><span class=\"token string\">'ip_pool'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            my_cursor <span class=\"token operator\">=</span> my_conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>            sql <span class=\"token operator\">=</span> <span class=\"token string\">'select `id`,`ip`,`port` from `pools`'</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            my_cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>            self<span class=\"token punctuation\">.</span>results <span class=\"token operator\">=</span> my_cursor<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>            my_conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">detect_pool</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"检测IP池中是否可用\"\"\"</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        <span class=\"token comment\"># 默认设置都可用</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        count <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>poor_size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>            <span class=\"token keyword\">return</span> count</pre></td></tr><tr><td data-num=\"146\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>poor_size</pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        my_conn <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>            my_conn <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">3308</span><span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> database<span class=\"token operator\">=</span><span class=\"token string\">'ip_pool'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>            my_cursor <span class=\"token operator\">=</span> my_conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>            <span class=\"token keyword\">for</span> ip_port <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>detect_ip<span class=\"token punctuation\">(</span>ip_port<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ip_port<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>                    del_sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'delete from `pools` where `id`=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>ip_port<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>                    my_cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>del_sql<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>                    my_conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>                    count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>                    <span class=\"token comment\"># print (' 删除一条不可用 ')</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>            my_conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>            <span class=\"token keyword\">return</span> count</pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre></pre></td></tr><tr><td data-num=\"164\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    IpPool<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/language/%E7%88%AC%E8%99%AB/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E8%AF%B7%E6%B1%82%E5%A4%B4%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%AD%97%E5%85%B8/",
            "url": "http://example.com/language/%E7%88%AC%E8%99%AB/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E8%AF%B7%E6%B1%82%E5%A4%B4%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%AD%97%E5%85%B8/",
            "title": "请求头转字典",
            "date_published": "2022-09-30T01:25:01.174Z",
            "content_html": "<p><em>将给定的请求头以字符串的形式传入，获取对应的字典</em></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">from_str_to_dict</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"将纯如的请求头解析为字典形式\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    header_list <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> header_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        headers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">': '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">': '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> headers</pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/language/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96%E5%BE%AE%E5%8D%9A/",
            "url": "http://example.com/language/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96%E5%BE%AE%E5%8D%9A/",
            "title": "爬取微博",
            "date_published": "2022-09-30T01:24:48.249Z",
            "content_html": "<h2 id=\"创建请求头\"><a class=\"markdownIt-Anchor\" href=\"#创建请求头\">#</a> 创建请求头</h2>\n<pre><code>accept: application/json, text/plain, */*\naccept-encoding: gzip, deflate, br\naccept-language: zh-CN,zh;q=0.9,en-CN;q=0.8,en;q=0.7\ncache-control: no-cache\nclient-version: v2.35.7\ncookie: XSRF-TOKEN=macx2rGrm-3ZYQTbUtYTiL88; _s_tentry=weibo.com; Apache=2527645026050.154.1664268394820; SINAGLOBAL=2527645026050.154.1664268394820; ULV=1664268394825:1:1:1:2527645026050.154.1664268394820:; SSOLoginState=1664269016; UPSTREAM-V-WEIBO-COM=b09171a17b2b5a470c42e2f713edace0; SCF=AvyqbGj7zgopqfXmNJ47QAUgchhT4h2wIckRUoPlASryU2ZFLETKA7FOK1rirhR9n5Rru8vbfjKjDuMnEFw4Pto.; SUB=_2A25OMXyuDeRhGeFK6lET-SvKzDWIHXVtR-lmrDV8PUNbmtAKLUTbkW9NQ4VuXGyR5stDS8H3d7EXOIdkvHugko_U; SUBP=0033WrSXqPxfM725Ws9jqgMF55529P9D9W5lIDjqzgmLHZKKaYVXdgoS5JpX5KMhUgL.FoMXeKeE1K-cS0.2dJLoIp7LxKML1KBLBKnLxKqL1hnLBoMNSh20eo.fSoM4; ALF=1695957118; WBPSESS=5Z6s8UWJ0z4nYQUZnNpJf4oe2LKJaXkL-cUF4FfrtNBRy8Ge9JfmKPnX6Z2s69WaANU9jP9cw9f_sgxamATIuUNSvxZHasDG-SLulj4Q0LWF6eP9gAFLFTOsYRjdrYSwIUdgYGXyTnXGRXbq7L6n6A==\npragma: no-cache\ntraceparent: 00-dcc1ae2f758bf9accc11160039547be1-adb1d1607d6e1c98-00\nuser-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36\n</code></pre>\n<h2 id=\"微博10\"><a class=\"markdownIt-Anchor\" href=\"#微博10\">#</a> 微博 1.0</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> 爬虫<span class=\"token punctuation\">.</span>工具类<span class=\"token punctuation\">.</span>字符串转字典 <span class=\"token keyword\">import</span> from_str_to_dict</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> 爬虫<span class=\"token punctuation\">.</span>工具类<span class=\"token punctuation\">.</span>获取IP <span class=\"token keyword\">import</span> IpPoolExecutor</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> pymysql</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">detect_start_data</span><span class=\"token punctuation\">(</span>event_name<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">,</span> month<span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"程序开始爬取日期\"\"\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>year<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>month<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span> <span class=\"token keyword\">in</span> event_name<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">detect_stop_data</span><span class=\"token punctuation\">(</span>event_name<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">,</span> month<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"程序结束爬取日期\"\"\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>year<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>month<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span> <span class=\"token keyword\">in</span> event_name<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_handpick_from_weibo</span><span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"爬取个人主页的精选\"\"\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\"># 'https://weibo.com/ajax/profile/myhot?page=1&amp;feature=2&amp;uid=5617567207'</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_weibo_from_weibo</span><span class=\"token punctuation\">(</span>down_name<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"爬取个人主页的微博\"\"\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    ip_pool <span class=\"token operator\">=</span> IpPoolExecutor<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>getIp_from_IpPool<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'header.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> head<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        headers <span class=\"token operator\">=</span> from_str_to_dict<span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    count <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">for</span> page <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        ip_port <span class=\"token operator\">=</span> ip_pool<span class=\"token punctuation\">.</span>__next__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://weibo.com/ajax/statuses/mymblog?uid=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>uid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">&amp;page=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">&amp;feature=0'</span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        resp <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span> proxies<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">:</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>ip_port<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>ip_port<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        event_lists <span class=\"token operator\">=</span> resp<span class=\"token punctuation\">[</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'list'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">for</span> event_list <span class=\"token keyword\">in</span> event_lists<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            ip_pool<span class=\"token punctuation\">.</span>__next__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            week<span class=\"token punctuation\">,</span> month<span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">,</span> district<span class=\"token punctuation\">,</span> year <span class=\"token operator\">=</span> event_list<span class=\"token punctuation\">[</span><span class=\"token string\">'created_at'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            source <span class=\"token operator\">=</span> event_list<span class=\"token punctuation\">[</span><span class=\"token string\">'source'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                text_raw <span class=\"token operator\">=</span> event_list<span class=\"token punctuation\">[</span><span class=\"token string\">'text_raw'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                text_raw <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            event_name <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>down_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\\\微博\\\\</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>year<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>month<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>day<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> detect_stop_data<span class=\"token punctuation\">(</span>event_name<span class=\"token punctuation\">,</span> <span class=\"token number\">2019</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sep'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'已达到结束时间'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token comment\"># os.mkdir(path=event_name)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span>event_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>event_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\\\微博信息.txt'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a+'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> pic<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token comment\"># pic.write (f' 来源：\\t &#123;source&#125;\\n 内容：\\t &#123;text_raw&#125;\\n 发布于：\\t &#123;region_name&#125;\\n')</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                pic<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'来源：\\t</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>source<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n内容：\\t</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>text_raw<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token string\">'page_info'</span> <span class=\"token keyword\">in</span> event_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                    media_title <span class=\"token operator\">=</span> event_list<span class=\"token punctuation\">[</span><span class=\"token string\">'page_info'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'page_title'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                    media_video <span class=\"token operator\">=</span> event_list<span class=\"token punctuation\">[</span><span class=\"token string\">'page_info'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'card_info'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'page_info'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'media_info'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'stream_url'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>event_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\\\</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>media_title<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.mp4'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb+'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> pic<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                        pic_video <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>media_video<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">120</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                        pic<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>pic_video<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                    media_name <span class=\"token operator\">=</span> event_list<span class=\"token punctuation\">[</span><span class=\"token string\">'page_info'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'media_info'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                    media_mp4 <span class=\"token operator\">=</span> event_list<span class=\"token punctuation\">[</span><span class=\"token string\">'page_info'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'media_info'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'playback_list'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'play_info'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                    <span class=\"token comment\"># print(media_mp4)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>event_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\\\</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>media_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.mp4'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb+'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> pic<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                        pic_video <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>media_mp4<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                        pic<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>pic_video<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token string\">'pic_ids'</span> <span class=\"token keyword\">in</span> event_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                    pic_ids <span class=\"token operator\">=</span> event_list<span class=\"token punctuation\">[</span><span class=\"token string\">'pic_ids'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                    <span class=\"token keyword\">for</span> pic_id <span class=\"token keyword\">in</span> pic_ids<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                        pic_url <span class=\"token operator\">=</span> event_list<span class=\"token punctuation\">[</span><span class=\"token string\">'pic_infos'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pic_id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'original'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>event_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\\\</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>pic_id<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.jpg'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> pic<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                            pic<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>pic_url<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'第</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>count<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">条已完成'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_video_from_weibo</span><span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"爬取个人主页的视频\"\"\"</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token comment\"># 'https://weibo.com/ajax/profile/getWaterFallContent?uid=5617567207&amp;cursor=4646453002373125'</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_pic_from_weibo</span><span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"爬取个人主页的图片\"\"\"</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token comment\"># 'https://weibo.com/ajax/profile/getImageWall?uid=5617567207&amp;sinceid=0&amp;has_album=true'</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_article_from_weibo</span><span class=\"token punctuation\">(</span>uid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"爬取个人主页的文章\"\"\"</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token comment\"># 'https://weibo.com/ajax/statuses/mymblog?uid=5617567207&amp;page=1&amp;feature=10'</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">select_uid_by_name</span><span class=\"token punctuation\">(</span>down_load<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    pymysql_connect <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token string\">'123456'</span><span class=\"token punctuation\">,</span> database<span class=\"token operator\">=</span><span class=\"token string\">'weibo_db'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    my_cursor <span class=\"token operator\">=</span> pymysql_connect<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token comment\"># sql = f'select `uid` from `celebrities` where `name` like \"%&#123;down_load&#125;%\"'</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    sql <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'select `uid` from `celebrities` where `name`=\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>down_load<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"'</span></span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    my_cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    down_load_uid <span class=\"token operator\">=</span> my_cursor<span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token keyword\">return</span> down_load_uid<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    down_name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入要下载的名字：'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token comment\"># 根据输入的数据进行数据库查找，得到人物的 uid</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    uid <span class=\"token operator\">=</span> select_uid_by_name<span class=\"token punctuation\">(</span>down_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----选项-----\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.精选\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2.微博\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3.视频\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"4.图片\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5.退出\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----选项-----\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    choice <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入你的选项:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token keyword\">if</span> choice <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请重新输入'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        get_weibo_from_weibo<span class=\"token punctuation\">(</span>down_name<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre></pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/language/Vue/",
            "url": "http://example.com/language/Vue/",
            "title": "Vue3",
            "date_published": "2022-09-25T07:03:29.472Z",
            "content_html": "<h1 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\">#</a> 简介</h1>\n<p><em>是一款用于构建用户界面的 JavaScript 框架，基于标准 HTML，CSS，JavaScript 构建，提供了一套声明式的，组件化的编程模型</em></p>\n<h2 id=\"核心功能\"><a class=\"markdownIt-Anchor\" href=\"#核心功能\">#</a> 核心功能</h2>\n<ul>\n<li>声明式渲染：Vue 基于标准 HTML 拓展了一套模板语法，可以声明式的描述 HTML 与 JavaScript 之间的关系</li>\n<li>响应性：Vue 会自动跟踪 JavaScript 状态变化并在改变发生时响应式的更新 DOM</li>\n</ul>\n<h2 id=\"渐进式框架\"><a class=\"markdownIt-Anchor\" href=\"#渐进式框架\">#</a> 渐进式框架</h2>\n<ul>\n<li>\n<p>无需构建步骤，渐进式增强静态的 HTML</p>\n</li>\n<li>\n<p>在任何页面中作为 Web Components 嵌入</p>\n</li>\n<li>\n<p>单页应用 (SPA)</p>\n</li>\n<li>\n<p>全栈 / 服务端渲染 (SSR)</p>\n</li>\n<li>\n<p>Jamstack / 静态站点生成 (SSG)</p>\n</li>\n<li>\n<p>开发桌面端、移动端、WebGL，甚至是命令行终端中的界面</p>\n</li>\n</ul>\n<h2 id=\"单文本组件\"><a class=\"markdownIt-Anchor\" href=\"#单文本组件\">#</a> 单文本组件</h2>\n<p>在大多数启用了构建工具的 Vue 项目中，我们可以使用一种类似 HTML 格式的文件来书写 Vue 组件，它被称为<strong>单文件组件</strong> (也被称为  <code>*.vue</code>  文件，英文 Single-File Components，缩写为 <strong>SFC</strong>)。</p>\n<p>Vue 的单文件组件会将一个组件的逻辑 (JavaScript)，模板 (HTML) 和样式 (CSS) 封装在同一个文件里。</p>\n<p>用单文件组件的格式写计数器示例：</p>\n<pre><code class=\"language-vue\">&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      count: 0\n    &#125;\n  &#125;\n&#125;\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button @click=&quot;count++&quot;&gt;Count is: &#123;&#123; count &#125;&#125;&lt;/button&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nbutton &#123;\n  font-weight: bold;\n&#125;\n&lt;/style&gt;\n</code></pre>\n<p>单文件组件是 Vue 的标志性功能。</p>\n<p>需要进行构建，我们推荐用它来编写 Vue 组件。</p>\n<h2 id=\"api风格\"><a class=\"markdownIt-Anchor\" href=\"#api风格\">#</a> API 风格</h2>\n<ul>\n<li>\n<p>选项式 API</p>\n<ul>\n<li>包含多个选项的对象来描述组件的逻辑，例如  <code>data</code> 、 <code>methods</code>  和  <code>mounted</code> 。选项所定义的属性都会暴露在函数内部的  <code>this</code>  上，它会指向当前的组件实例</li>\n</ul>\n<pre><code class=\"language-vue\">&lt;script&gt;\nexport default &#123;\n  // data() 返回的属性将会成为响应式的状态\n  // 并且暴露在 `this` 上\n  data() &#123;\n    return &#123;\n      count: 0\n    &#125;\n  &#125;,\n\n  // methods 是一些用来更改状态与触发更新的函数\n  // 它们可以在模板中作为事件监听器绑定\n  methods: &#123;\n    increment() &#123;\n      this.count++\n    &#125;\n  &#125;,\n\n  // 生命周期钩子会在组件生命周期的各个不同阶段被调用\n  // 例如这个函数就会在组件挂载完成后被调用\n  mounted() &#123;\n    console.log(`The initial count is $&#123;this.count&#125;.`)\n  &#125;\n&#125;\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button @click=&quot;increment&quot;&gt;Count is: &#123;&#123; count &#125;&#125;&lt;/button&gt;\n&lt;/template&gt;\n</code></pre>\n</li>\n<li>\n<p>组合式 API</p>\n<ul>\n<li>使用导入的 API 函数来描述组件逻辑。在单文件组件中，组合式 API 通常会  <code>&lt;script setup&gt;</code>  与搭配使用。这个  <code>setup</code>  attribute 是一个标识，告诉 Vue 需要在编译时进行一些处理，让我们可以更简洁地使用组合式 API。比如， <code>&lt;script setup&gt;</code>  中的导入和顶层变量 / 函数都能够在模板中直接使用</li>\n</ul>\n<pre><code class=\"language-vue\">&lt;script setup&gt;\nimport &#123; ref, onMounted &#125; from 'vue'\n\n// 响应式状态\nconst count = ref(0)\n\n// 用来修改状态、触发更新的函数\nfunction increment() &#123;\n  count.value++\n&#125;\n\n// 生命周期钩子\nonMounted(() =&gt; &#123;\n  console.log(`The initial count is $&#123;count.value&#125;.`)\n&#125;)\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button @click=&quot;increment&quot;&gt;Count is: &#123;&#123; count &#125;&#125;&lt;/button&gt;\n&lt;/template&gt;\n</code></pre>\n</li>\n</ul>\n<h2 id=\"通过cdn使用vue\"><a class=\"markdownIt-Anchor\" href=\"#通过cdn使用vue\">#</a> 通过 CDN 使用 Vue</h2>\n<pre><code class=\"language-vue\">&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p><em>通过 CDN 使用 Vue 时，不涉及 “构建步骤”。这使得设置更加简单，并且可以用于增强静态的 HTML 或与后端框架集成。但是，你将无法使用单文件组件 (SFC) 语法。 <code>unpkg</code> ， <code>jsdelivr</code>  或  <code>cdnjs</code> </em></p>\n<h2 id=\"使用全局构建版本\"><a class=\"markdownIt-Anchor\" href=\"#使用全局构建版本\">#</a> 使用全局构建版本</h2>\n<p><em>该版本的所有顶层 API 都以属性的形式暴露在了全局的  <code>Vue</code>  对象上</em></p>\n<pre><code class=\"language-vue\">&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<h2 id=\"使用es模块构建版本\"><a class=\"markdownIt-Anchor\" href=\"#使用es模块构建版本\">#</a> 使用 ES 模块构建版本</h2>\n<pre><code class=\"language-vue\">&lt;script type=&quot;module&quot;&gt;\n  import &#123; createApp &#125; from 'https://unpkg.com/vue@3/dist/vue.esm-browser.js'\n  \n  createApp(&#123;\n    data() &#123;\n      return &#123;\n        message: 'Hello Vue!'\n      &#125;\n    &#125;\n  &#125;).mount('#app')\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"启用-import-maps\"><a class=\"markdownIt-Anchor\" href=\"#启用-import-maps\">#</a> 启用 Import maps</h2>\n<pre><code class=\"language-vue\">import &#123; createApp &#125; from 'vue'\n</code></pre>\n<p><em>使用导入映射表 (Import Maps) 来告诉浏览器如何定位到导入的  <code>vue</code> ：</em></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>importmap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string-property property\">\"imports\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token string-property property\">\"vue\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://unpkg.com/vue@3/dist/vue.esm-browser.js\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createApp <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello Vue!'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"拆分模块\"><a class=\"markdownIt-Anchor\" href=\"#拆分模块\">#</a> 拆分模块</h2>\n<p>将代码分割成单独的 JavaScript 文件</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- index.html --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createApp <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">import</span> MyComponent <span class=\"token keyword\">from</span> <span class=\"token string\">'./my-component.js'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span>MyComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// my-component.js</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token literal-property property\">template</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div>count is &lt;/div></span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如果直接在浏览器中打开了上面的  <code>index.html</code> ，你会发现它抛出了一个错误，因为 ES 模块不能通过  <code>file://</code>  协议工作。</p>\n<p>使用本地 HTTP 服务器通过  <code>http://</code>  协议提供 <code>index.html</code> 。</p>\n<p>从命令行在 HTML 文件所在文件夹下运行  <code>npx serve</code> 。</p>\n<h1 id=\"基础\"><a class=\"markdownIt-Anchor\" href=\"#基础\">#</a> 基础</h1>\n<h2 id=\"创建一个应用\"><a class=\"markdownIt-Anchor\" href=\"#创建一个应用\">#</a> 创建一个应用</h2>\n<h3 id=\"应用实例\"><a class=\"markdownIt-Anchor\" href=\"#应用实例\">#</a> 应用实例</h3>\n<p>每个 Vue 应用都是通过 <a href=\"https://cn.vuejs.org/api/application.html#createapp\"> <code>createApp</code> </a> 函数创建一个新的 <strong>应用实例</strong>：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createApp <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">/* 根组件选项 */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"根组件\"><a class=\"markdownIt-Anchor\" href=\"#根组件\">#</a> 根组件</h3>\n<p>传入  <code>createApp</code>  的对象实际上是一个组件，每个应用都需要一个 “根组件”，其他组件将作为其子组件。</p>\n<p>如果你使用的是单文件组件，我们可以直接从另一个文件中导入根组件。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createApp <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 从一个单文件组件中导入根组件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App.vue'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"挂载应用\"><a class=\"markdownIt-Anchor\" href=\"#挂载应用\">#</a> 挂载应用</h3>\n<p>* 应用实例必须在调用了  <code>.mount()</code>  方法后才会渲染出来。* 该方法接收一个 “容器” 参数，可以是一个实际的 DOM 元素或是一个 CSS 选择器字符串：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>应用根组件的内容将会被渲染在容器元素里面。容器元素自己将<strong>不会</strong>被视为应用的一部分。</p>\n<p><code>.mount()</code>  方法应该始终在整个应用配置和资源注册完成后被调用。同时请注意，不同于其他资源注册方法，它的返回值是根组件实例而非应用实例。</p>\n<p>当根组件没有设置  <code>template</code>  选项时，Vue 将自动使用容器的  <code>innerHTML</code>  作为模板。</p>\n<h3 id=\"应用配置\"><a class=\"markdownIt-Anchor\" href=\"#应用配置\">#</a> 应用配置</h3>\n<p><em>应用实例会暴露一个  <code>.config</code>  对象允许我们配置一些应用级的选项</em></p>\n<p>定义一个应用级的错误处理器，它将捕获所有由子组件上抛而未被处理的错误：</p>\n<pre><code>app.config.errorHandler = (err) =&gt; &#123;\n  /* 处理错误 */\n&#125;\n</code></pre>\n<p>应用实例还提供了一些方法来注册应用范围内可用的资源，例如注册一个组件：</p>\n<pre><code>app.component('TodoDeleteButton', TodoDeleteButton)\n</code></pre>\n<p><code>TodoDeleteButton</code>  在应用的任何地方都是可用的。</p>\n<h3 id=\"多个应用实例\"><a class=\"markdownIt-Anchor\" href=\"#多个应用实例\">#</a> 多个应用实例</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> app1 <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">/* ... */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>app1<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#container-1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> app2 <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">/* ... */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>app2<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#container-2'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"模板语法\"><a class=\"markdownIt-Anchor\" href=\"#模板语法\">#</a> 模板语法</h2>\n<h3 id=\"文本插值\"><a class=\"markdownIt-Anchor\" href=\"#文本插值\">#</a> 文本插值</h3>\n<p>最基本的数据绑定形式是文本插值，它使用的是 “Mustache” 语法 (即双大括号)：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Message: <span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>双大括号标签会被替换为相应组件实例中  <code>msg</code>  属性的值。同时每次  <code>msg</code>  属性更改时它也会同步更新。</p>\n<h3 id=\"原始html\"><a class=\"markdownIt-Anchor\" href=\"#原始html\">#</a> 原始 HTML</h3>\n<p><code>v-html</code>  指令:</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Using text interpolation: <span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Using v-html directive: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">v-html</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rawHtml<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><em>在当前组件实例上，将此元素的  <code>innerHTML</code>  与  <code>rawHtml</code>  属性保持同步</em></p>\n<h3 id=\"attribute绑定\"><a class=\"markdownIt-Anchor\" href=\"#attribute绑定\">#</a> Attribute 绑定</h3>\n<p>响应式地绑定一个 attribute，应该使用  <code>v-bind</code>  指令</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dynamicId<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><code>v-bind</code>  指令指示 Vue 将元素的  <code>id</code>  attribute 与组件的  <code>dynamicId</code>  属性保持一致。如果绑定的值是  <code>null</code>  或者  <code>undefined</code> ，那么该 attribute 将会从渲染的元素上移除。</p>\n<p><strong>简写语法： <code>&lt;div :id=&quot;dynamicId&quot;&gt;&lt;/div&gt;</code> </strong></p>\n",
            "tags": [
                "语言",
                "Vue",
                "Vue"
            ]
        },
        {
            "id": "http://example.com/language/JavaScript/",
            "url": "http://example.com/language/JavaScript/",
            "title": "JavaScript语法基础",
            "date_published": "2022-09-25T07:03:16.883Z",
            "content_html": "<h2 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\">#</a> 简介</h2>\n<p><em>脚本语言，逐行读取代码，编写的位置不同，加载顺序不同</em></p>\n<ul>\n<li>\n<p>轻量级的编程语言</p>\n</li>\n<li>\n<p>可插入 HTML 实现</p>\n</li>\n<li>\n<p>直接写入 HTML 输出流</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;h1>这是一个JavaScript&lt;/h1>\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 如果在文档加载后使用这个方法，会覆盖掉整个方法</span></pre></td></tr></table></figure><ul>\n<li>对事件的反应</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>在HTML中使用</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>欢迎<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    点我</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>改变 HTML 的内容</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementBtId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 查找元素</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>x<span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span><span class=\"token string\">\"Hello JavaScript\"</span> <span class=\"token comment\">// 改变内容</span></pre></td></tr></table></figure><ul>\n<li>改变 HTML 图像</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//点亮灯泡</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">changeImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    element<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myimage'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bulbon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\telement<span class=\"token punctuation\">.</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"/images/pic_bulboff.gif\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        element<span class=\"token punctuation\">.</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"/images/pic_bulbon.gif\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">loading</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lazy<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myimage<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">changeImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/pic_bulboff.gif<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>180<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">&lt;!-- src 属性的值有没有包含 bulbon 这个字符串，如果存在字符串 bulbon，图片 src 更新为 bulboff.gif，若匹配不到 bulbon 字符串，src 则更新为 bulbon.gif</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>--></span></pre></td></tr></table></figure><ul>\n<li>改变 HTML 样式</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 找到元素</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>x<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span><span class=\"token string\">\"#ff0000\"</span> <span class=\"token comment\">// 改变样式</span></pre></td></tr></table></figure><ul>\n<li>验证用户的输入</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isNan</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">||</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^\\s*)|(\\s*$)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"不是数字哦\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"规范\"><a class=\"markdownIt-Anchor\" href=\"#规范\">#</a> 规范</h2>\n<p><strong>添加位置</strong>：</p>\n<ul>\n<li><code>body</code>  中的 <code>script</code></li>\n<li><code>head</code>  中的 <code>script</code></li>\n<li>引入外部的 <code>js</code></li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myScript.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><em>Chrome 的 F12 控制台可以运行 JS，或者 <code>Sources</code>  下面的 <code>Snippet</code>  新建 JS 文件</em></p>\n<h3 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\">#</a> 输出</h3>\n<ul>\n<li>使用 <code>windows.alert()</code>  弹出警告框</li>\n<li>使用 <code>document.write()</code>  将内容写道 HTML 文档中</li>\n<li>使用 <code>innerHTML</code>  写入到 HTML 元素</li>\n<li>使用 <code>console.log()</code>  写入到浏览器的控制台</li>\n</ul>\n<h2 id=\"函数\"><a class=\"markdownIt-Anchor\" href=\"#函数\">#</a> 函数</h2>\n<h3 id=\"箭头函数\"><a class=\"markdownIt-Anchor\" href=\"#箭头函数\">#</a> 箭头函数</h3>\n<p>ES6 新增了箭头函数。</p>\n<p>箭头函数表达式的语法比普通函数表达式更简洁。</p>\n<pre><code>(参数1, 参数2, …, 参数N) =&gt; &#123; 函数声明 &#125;\n\n(参数1, 参数2, …, 参数N) =&gt; 表达式(单一)\n// 相当于：(参数1, 参数2, …, 参数N) =&gt;&#123; return 表达式; &#125;\n</code></pre>\n<p>当只有一个参数时，圆括号是可选的：</p>\n<pre><code>(单一参数) =&gt; &#123;函数声明&#125;\n单一参数 =&gt; &#123;函数声明&#125;\n</code></pre>\n<p>没有参数的函数应该写成一对圆括号:</p>\n<pre><code>() =&gt; &#123;函数声明&#125;\n</code></pre>\n<h3 id=\"自调用函数\"><a class=\"markdownIt-Anchor\" href=\"#自调用函数\">#</a> 自调用函数</h3>\n<p>函数表达式可以 “自调用”。</p>\n<p>自调用表达式会自动调用。</p>\n<p>如果表达式后面紧跟 () ，则会自动调用。</p>\n<p>不能自调用声明的函数。</p>\n<p>通过添加括号，来说明它是一个函数表达式</p>\n<h2 id=\"数据类型\"><a class=\"markdownIt-Anchor\" href=\"#数据类型\">#</a> 数据类型</h2>\n<ul>\n<li>值传递（基本类型）：字符串 <code>String</code> ，数字 <code>Number</code> ，布尔 <code>Boolean</code> ，空 <code>Null</code> ，未定义 <code>Undefined</code> ， <code>symbol</code></li>\n<li>引用传递：对象 <code>Object</code> ，数组 <code>Array</code> ，函数 <code>Function</code> ，正则 <code>RegExp</code> ，日期 <code>Date</code></li>\n</ul>\n<p><strong>Symbol 是 ES6 引入了一种新的原始数据类型，表示独一无二的值。</strong></p>\n<blockquote>\n<p>可以使用  <code>typeof</code>  查看数据类型</p>\n</blockquote>\n<p>声明新变量时，可以使用关键词 “new” 来声明其类型：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> carname<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> x<span class=\"token operator\">=</span>      <span class=\"token keyword\">new</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> y<span class=\"token operator\">=</span>      <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> cars<span class=\"token operator\">=</span>   <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> person<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"语法\"><a class=\"markdownIt-Anchor\" href=\"#语法\">#</a> 语法</h2>\n<h3 id=\"常用字面量\"><a class=\"markdownIt-Anchor\" href=\"#常用字面量\">#</a> 常用字面量</h3>\n<ul>\n<li>数字字面量，包含科学计数法，小数</li>\n<li>字符串字面量</li>\n<li>表达式字面量</li>\n<li>数组字面量</li>\n<li>对象字面量（相当于字典）</li>\n<li>函数字面量</li>\n</ul>\n<h3 id=\"常用语法\"><a class=\"markdownIt-Anchor\" href=\"#常用语法\">#</a> 常用语法</h3>\n<ol>\n<li>使用关键字 <code>var</code>  来存储变量</li>\n<li>语句是分号隔开</li>\n<li>单行注释使用 ----&gt;  <code>//</code></li>\n<li>多行注释 —&gt;  <code>/*...*/</code></li>\n<li><em>数字加字符串会返回字符串</em></li>\n<li>使用 Unicode 字符集</li>\n<li>使用反斜杠对文本字符进行拆行 —&gt;   <code>\\</code></li>\n</ol>\n<h3 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\">#</a> 变量</h3>\n<blockquote>\n<p>命名规范</p>\n</blockquote>\n<ul>\n<li>变量必须以字母开头</li>\n<li>变量也能以 $ 和_符号开头（不推荐）</li>\n<li>大小写敏感</li>\n</ul>\n<blockquote>\n<p>使用技巧</p>\n</blockquote>\n<ul>\n<li><code>const</code>  表示常量关键字，初始化后值不可再修改</li>\n<li>可以一条语句多个变量， <code>var</code>  开头，逗号分离变量</li>\n</ul>\n<blockquote>\n<p>ES6</p>\n</blockquote>\n<ul>\n<li>2015 以前，使用 <code>var</code>  关键字，只有<strong>全局变量</strong>和<strong>局部变量</strong></li>\n<li>2015 年以后，允许使用 <code>const</code>  定义常量，使用 <code>let</code>  作为块级作用域，只能在 {} 中访问</li>\n</ul>\n<blockquote>\n<p>HTML 使用全局变量</p>\n</blockquote>\n<ul>\n<li>在 JavaScript 中，全局作用域是针对 JavaScript 环境</li>\n<li>在 HTML 中，全局作用域是针对 window 对象</li>\n<li>使用 <strong>var</strong> 关键字声明的全局作用域变量属于 window 对象</li>\n<li>使用 <strong>let</strong> 关键字声明的全局作用域变量不属于 window 对象</li>\n<li>在相同的作用域或块级作用域中，不能使用 <strong>let</strong> 关键字来重置 <strong>var</strong> 关键字声明的变量</li>\n<li>在相同的作用域或块级作用域中，不能使用 <strong>let</strong> 关键字来重置 <strong>let</strong> 关键字声明的变量</li>\n<li>在相同的作用域或块级作用域中，不能使用 <strong>var</strong> 关键字来重置 <strong>let</strong> 关键字声明的变量</li>\n<li><strong>let</strong> 关键字在不同作用域，或不同块级作用域中是可以重新声明赋值的</li>\n<li>** <code>var</code> ** 变量可以在使用后声明</li>\n<li>只有<strong>声明的变量会提升</strong>，<strong>初始化的不会</strong></li>\n</ul>\n<blockquote>\n<p>并非真正的常量</p>\n</blockquote>\n<ul>\n<li>const 的本质：定义了一个常量引用一个值</li>\n<li>const 定义的<strong>对象</strong>或<strong>数组</strong>，是<strong>可变的</strong>，可修改，但不能重新赋值</li>\n</ul>\n<blockquote>\n<p>变量的生存期</p>\n</blockquote>\n<p>从它们被声明的时间开始，全局变量会在页面关闭后删除</p>\n<p><strong>如果变量在函数内没有声明（没有使用 var 关键字），该变量为全局变量</strong></p>\n<h2 id=\"undefined和null的区别\"><a class=\"markdownIt-Anchor\" href=\"#undefined和null的区别\">#</a> undefined 和 null 的区别</h2>\n<ol>\n<li>定义：\n<ol>\n<li>undefined：是所有没有赋值变量的默认值，自动赋值。</li>\n<li>null：主动释放一个变量引用的对象，表示一个变量不再指向任何对象地址。</li>\n</ol>\n</li>\n<li>何时使用 null\n<ol>\n<li>当使用完一个比较大的对象时，需要对其进行释放内存时，设置为 null</li>\n</ol>\n</li>\n<li>异同点\n<ol>\n<li><strong>共同点</strong>：都是原始类型，保存在栈中变量本地</li>\n<li><strong>不同点</strong>：undefined—— 表示变量声明过但并未赋过值</li>\n<li>null—— 表示一个变量将来可能指向一个对象</li>\n</ol>\n</li>\n<li>延伸 —— 垃圾回收站</li>\n</ol>\n<h2 id=\"类型转换\"><a class=\"markdownIt-Anchor\" href=\"#类型转换\">#</a> 类型转换</h2>\n<h3 id=\"constructor属性\"><a class=\"markdownIt-Anchor\" href=\"#constructor属性\">#</a> constructor 属性</h3>\n<p><em>返回所有变量的构造函数</em></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">.</span>constructor                 <span class=\"token comment\">// 返回函数 String ()  &#123; [native code] &#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">3.14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>constructor                 <span class=\"token comment\">// 返回函数 Number ()  &#123; [native code] &#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span>constructor                  <span class=\"token comment\">// 返回函数 Boolean () &#123; [native code] &#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>constructor              <span class=\"token comment\">// 返回函数 Array ()   &#123; [native code] &#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'John'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">34</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span>constructor  <span class=\"token comment\">// 返回函数 Object ()  &#123; [native code] &#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>constructor             <span class=\"token comment\">// 返回函数 Date ()    &#123; [native code] &#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span>constructor         <span class=\"token comment\">// 返回函数 Function ()&#123; [native code] &#125;</span></pre></td></tr></table></figure><h2 id=\"正则表达式\"><a class=\"markdownIt-Anchor\" href=\"#正则表达式\">#</a> 正则表达式</h2>\n<h3 id=\"使用test\"><a class=\"markdownIt-Anchor\" href=\"#使用test\">#</a> 使用 test ()</h3>\n<p>用于检测一个字符串是否匹配某个模式，如果字符串中含有匹配的文本，则返回 true，否则返回 false。</p>\n<h3 id=\"使用-exec\"><a class=\"markdownIt-Anchor\" href=\"#使用-exec\">#</a> 使用 exec ()</h3>\n<p>用于检索字符串中的正则表达式的匹配。</p>\n<p>该函数返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。</p>\n<h2 id=\"调试\"><a class=\"markdownIt-Anchor\" href=\"#调试\">#</a> 调试</h2>\n<ul>\n<li>console.log()</li>\n<li>dubugger 关键字</li>\n</ul>\n<h2 id=\"严格模式\"><a class=\"markdownIt-Anchor\" href=\"#严格模式\">#</a> 严格模式</h2>\n<p><em>表示严格模式下不能使用未声明的变量</em></p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>严格模式通过在脚本或函数的头部添加 use strict; 表达式来声明</pre></td></tr></table></figure><h2 id=\"验证api\"><a class=\"markdownIt-Anchor\" href=\"#验证api\">#</a> 验证 API</h2>\n<h3 id=\"约束验证dom方法\"><a class=\"markdownIt-Anchor\" href=\"#约束验证dom方法\">#</a> 约束验证 DOM 方法</h3>\n<ul>\n<li><code>checkValidity()</code> ：会检查元素是否有任何输入约束条件，并且检查值是否符合约束条件。 如果值是不符合约束条件的，浏览器就会在该元素上触发一个可以撤销的 invalid 事件</li>\n<li><code>setCustomValidity()</code> ：设置 input 元素的  <code>validationMessage</code>  属性，用于自定义错误提示信息的方法。</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>input id=\"id1\" type=\"number\" min=\"100\" max=\"300\" required></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>验证<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">var</span> inpObj <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>inpObj<span class=\"token punctuation\">.</span><span class=\"token function\">checkValidity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> inpObj<span class=\"token punctuation\">.</span>validationMessage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"约束验证dom属性\"><a class=\"markdownIt-Anchor\" href=\"#约束验证dom属性\">#</a> 约束验证 DOM 属性</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">validity</td>\n<td style=\"text-align:left\">布尔属性值，返回 input 输入值是否合法</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">validationMessage</td>\n<td style=\"text-align:left\">浏览器错误提示信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">willValidate</td>\n<td style=\"text-align:left\">指定 input 是否需要验证</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>Validity 属性</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>customError</td>\n<td>设置为 true, 如果设置了自定义的 validity 信息。</td>\n</tr>\n<tr>\n<td>patternMismatch</td>\n<td>设置为 true, 如果元素的值不匹配它的模式属性。</td>\n</tr>\n<tr>\n<td>rangeOverflow</td>\n<td>设置为 true, 如果元素的值大于设置的最大值。</td>\n</tr>\n<tr>\n<td>rangeUnderflow</td>\n<td>设置为 true, 如果元素的值小于它的最小值。</td>\n</tr>\n<tr>\n<td>stepMismatch</td>\n<td>设置为 true, 如果元素的值不是按照规定的 step 属性设置。</td>\n</tr>\n<tr>\n<td>tooLong</td>\n<td>设置为 true, 如果元素的值超过了 maxLength 属性设置的长度。</td>\n</tr>\n<tr>\n<td>typeMismatch</td>\n<td>设置为 true, 如果元素的值不是预期相匹配的类型。</td>\n</tr>\n<tr>\n<td>valueMissing</td>\n<td>设置为 true，如果元素 (required 属性) 没有值。</td>\n</tr>\n<tr>\n<td>valid</td>\n<td>设置为 true，如果元素的值是合法的。</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  x<span class=\"token punctuation\">.</span><span class=\"token function\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 使用前先取消自定义，否则下次点击 checkValidity 总返 false</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">checkValidity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    x<span class=\"token punctuation\">.</span><span class=\"token function\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>validationMessage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    x<span class=\"token punctuation\">.</span><span class=\"token function\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"正确\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>validationMessage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"保留关键字\"><a class=\"markdownIt-Anchor\" href=\"#保留关键字\">#</a> 保留关键字</h2>\n<p><em> <code>Javascript</code>  的保留关键字不可以用作变量、标签或者函数名。有些保留关键字是作为  <code>Javascript </code> 以后扩展使用</em></p>\n<table>\n<thead>\n<tr>\n<th>abstract</th>\n<th>arguments</th>\n<th>boolean</th>\n<th>break</th>\n<th>byte</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>case</td>\n<td>catch</td>\n<td>char</td>\n<td>class*</td>\n<td>const</td>\n</tr>\n<tr>\n<td>continue</td>\n<td>debugger</td>\n<td>default</td>\n<td>delete</td>\n<td>do</td>\n</tr>\n<tr>\n<td>double</td>\n<td>else</td>\n<td>enum*</td>\n<td>eval</td>\n<td>export*</td>\n</tr>\n<tr>\n<td>extends*</td>\n<td>false</td>\n<td>final</td>\n<td>finally</td>\n<td>float</td>\n</tr>\n<tr>\n<td>for</td>\n<td>function</td>\n<td>goto</td>\n<td>if</td>\n<td>implements</td>\n</tr>\n<tr>\n<td>import*</td>\n<td>in</td>\n<td>instanceof</td>\n<td>int</td>\n<td>interface</td>\n</tr>\n<tr>\n<td>let</td>\n<td>long</td>\n<td>native</td>\n<td>new</td>\n<td>null</td>\n</tr>\n<tr>\n<td>package</td>\n<td>private</td>\n<td>protected</td>\n<td>public</td>\n<td>return</td>\n</tr>\n<tr>\n<td>short</td>\n<td>static</td>\n<td>super*</td>\n<td>switch</td>\n<td>synchronized</td>\n</tr>\n<tr>\n<td>this</td>\n<td>throw</td>\n<td>throws</td>\n<td>transient</td>\n<td>true</td>\n</tr>\n<tr>\n<td>try</td>\n<td>typeof</td>\n<td>var</td>\n<td>void</td>\n<td>volatile</td>\n</tr>\n<tr>\n<td>while</td>\n<td>with</td>\n<td>yield</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"javascript-对象-属性和方法\"><a class=\"markdownIt-Anchor\" href=\"#javascript-对象-属性和方法\">#</a> JavaScript 对象、属性和方法</h3>\n<table>\n<thead>\n<tr>\n<th>Array</th>\n<th>Date</th>\n<th>eval</th>\n<th>function</th>\n<th>hasOwnProperty</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Infinity</td>\n<td>isFinite</td>\n<td>isNaN</td>\n<td>isPrototypeOf</td>\n<td>length</td>\n</tr>\n<tr>\n<td>Math</td>\n<td>NaN</td>\n<td>name</td>\n<td>Number</td>\n<td>Object</td>\n</tr>\n<tr>\n<td>prototype</td>\n<td>String</td>\n<td>toString</td>\n<td>undefined</td>\n<td>valueOf</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"windows-保留关键字\"><a class=\"markdownIt-Anchor\" href=\"#windows-保留关键字\">#</a> Windows 保留关键字</h3>\n<table>\n<thead>\n<tr>\n<th>alert</th>\n<th>all</th>\n<th>anchor</th>\n<th>anchors</th>\n<th>area</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>assign</td>\n<td>blur</td>\n<td>button</td>\n<td>checkbox</td>\n<td>clearInterval</td>\n</tr>\n<tr>\n<td>clearTimeout</td>\n<td>clientInformation</td>\n<td>close</td>\n<td>closed</td>\n<td>confirm</td>\n</tr>\n<tr>\n<td>constructor</td>\n<td>crypto</td>\n<td>decodeURI</td>\n<td>decodeURIComponent</td>\n<td>defaultStatus</td>\n</tr>\n<tr>\n<td>document</td>\n<td>element</td>\n<td>elements</td>\n<td>embed</td>\n<td>embeds</td>\n</tr>\n<tr>\n<td>encodeURI</td>\n<td>encodeURIComponent</td>\n<td>escape</td>\n<td>event</td>\n<td>fileUpload</td>\n</tr>\n<tr>\n<td>focus</td>\n<td>form</td>\n<td>forms</td>\n<td>frame</td>\n<td>innerHeight</td>\n</tr>\n<tr>\n<td>innerWidth</td>\n<td>layer</td>\n<td>layers</td>\n<td>link</td>\n<td>location</td>\n</tr>\n<tr>\n<td>mimeTypes</td>\n<td>navigate</td>\n<td>navigator</td>\n<td>frames</td>\n<td>frameRate</td>\n</tr>\n<tr>\n<td>hidden</td>\n<td>history</td>\n<td>image</td>\n<td>images</td>\n<td>offscreenBuffering</td>\n</tr>\n<tr>\n<td>open</td>\n<td>opener</td>\n<td>option</td>\n<td>outerHeight</td>\n<td>outerWidth</td>\n</tr>\n<tr>\n<td>packages</td>\n<td>pageXOffset</td>\n<td>pageYOffset</td>\n<td>parent</td>\n<td>parseFloat</td>\n</tr>\n<tr>\n<td>parseInt</td>\n<td>password</td>\n<td>pkcs11</td>\n<td>plugin</td>\n<td>prompt</td>\n</tr>\n<tr>\n<td>propertyIsEnum</td>\n<td>radio</td>\n<td>reset</td>\n<td>screenX</td>\n<td>screenY</td>\n</tr>\n<tr>\n<td>scroll</td>\n<td>secure</td>\n<td>select</td>\n<td>self</td>\n<td>setInterval</td>\n</tr>\n<tr>\n<td>setTimeout</td>\n<td>status</td>\n<td>submit</td>\n<td>taint</td>\n<td>text</td>\n</tr>\n<tr>\n<td>textarea</td>\n<td>top</td>\n<td>unescape</td>\n<td>untaint</td>\n<td>window</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"json\"><a class=\"markdownIt-Anchor\" href=\"#json\">#</a> JSON</h2>\n<blockquote>\n<p>JSON 字符串替换为 JavaScript 对象</p>\n</blockquote>\n<ul>\n<li>创建 JavaScript 字符串，字符串为 JSON 格式的数据</li>\n<li>JavaScript 内置函数 <code> JSON.parse()</code>  将字符串转换为 JavaScript 对象</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qcy9qYXZhc2NyaXB0LWpzb24tcGFyc2UuaHRtbA==\">JSON.parse()</span></td>\n<td style=\"text-align:left\">用于将一个 JSON 字符串转换为 JavaScript 对象。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qcy9qYXZhc2NyaXB0LWpzb24tc3RyaW5naWZ5Lmh0bWw=\">JSON.stringify()</span></td>\n<td style=\"text-align:left\">用于将 JavaScript 值转换为 JSON 字符串。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"javascriptvoid0-含义\"><a class=\"markdownIt-Anchor\" href=\"#javascriptvoid0-含义\">#</a> javascript:void (0) 含义</h2>\n<p><strong>void 是 JavaScript 中非常重要的关键字，该操作符指定要计算一个表达式但是不返回值</strong></p>\n<blockquote>\n<p>href=&quot;#&quot; 与 href=&quot;javascript:void (0)&quot; 的区别</p>\n</blockquote>\n<p><strong>#</strong> 包含了一个位置信息，默认的锚是 **#top** 也就是网页的上端。</p>\n<p>而 javascript:void (0), 仅仅表示一个死链接。</p>\n<p>在页面很长的时候会使用 <strong>#</strong> 来定位页面的具体位置，格式为：<strong># + id</strong>。</p>\n<p>如果你要定义一个死链接请使用 javascript:void (0)</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>// 阻止链接跳转，URL不会有任何变化</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript:void(0)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nofollow ugc<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点击此处<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>// 虽然阻止了链接跳转，但URL尾部会多个#，改变了当前URL。（# 主要用于配合 location.hash）</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nofollow ugc<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点击此处<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>// 同理，# 可以的话，? 也能达到阻止页面跳转的效果，但也相同的改变了URL。（? 主要用于配合 location.search）</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>?<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nofollow ugc<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点击此处<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>// Chrome 中即使 javascript:0; 也没变化，firefox中会变成一个字符串0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript:0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nofollow ugc<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点击此处<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"异步编程\"><a class=\"markdownIt-Anchor\" href=\"#异步编程\">#</a> 异步编程</h2>\n<h3 id=\"什么时候用异步编程\"><a class=\"markdownIt-Anchor\" href=\"#什么时候用异步编程\">#</a> 什么时候用异步编程</h3>\n<p>有一个按钮，如果我们设置它的 onclick 事件为一个死循环，那么当这个按钮按下，整个网页将失去响应。</p>\n<p>为了避免这种情况的发生，我们常常用子线程来完成一些可能消耗时间足够长以至于被用户察觉的事情，比如读取一个大文件或者发出一个网络请求。</p>\n<p>因为子线程独立于主线程，所以即使出现阻塞也不会影响主线程的运行。</p>\n<p>但是子线程有一个局限：一旦发射了以后就会与主线程失去同步，我们无法确定它的结束，如果结束之后需要处理一些事情，比如处理来自服务器的信息，我们是无法将它合并到主线程中去的。</p>\n<p>为了解决这个问题，JavaScript 中的异步操作函数往往通过回调函数来实现异步任务的结果处理。</p>\n<h3 id=\"回调函数\"><a class=\"markdownIt-Anchor\" href=\"#回调函数\">#</a> 回调函数</h3>\n<p>回调函数就是一个函数，它是在我们启动一个异步任务的时候就告诉它：等你完成了这个任务之后要干什么。这样一来主线程几乎不用关心异步任务的状态了，他自己会善始善终。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span><span class=\"token string\">\"RUNOOB-1!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span><span class=\"token string\">\"RUNOOB-2!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"ajax\"><a class=\"markdownIt-Anchor\" href=\"#ajax\">#</a> AJAX</h3>\n<p><em> <code>XMLHttpRequest</code>  常常用于请求来自远程服务器上的 XML 或 JSON 数据</em></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 输出接收到的文字数据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span>xhr<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span><span class=\"token string\">\"请求出错\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 发送异步 GET 请求</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"https://www.runoob.com/try/ajax/ajax_info.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>$<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://www.runoob.com/try/ajax/demo_test.php\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据: \"</span> <span class=\"token operator\">+</span> data <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n状态: \"</span> <span class=\"token operator\">+</span> status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>XMLHttpRequest</code>  的  <code>onload</code>  和  <code>onerror </code> 属性都是函数，分别在它请求成功和请求失败时被调用。如果你使用完整的 jQuery 库，也可以更加优雅的使用异步  <code>AJAX</code></p>\n<h3 id=\"promise\"><a class=\"markdownIt-Anchor\" href=\"#promise\">#</a> Promise</h3>\n<p><em>可以将嵌套的代码转变为顺序格式的代码</em></p>\n<p>Promise 构造函数只有一个参数，是一个函数，这个函数在构造之后会直接被异步运行，所以我们称之为起始函数。起始函数包含两个参数 resolve 和 reject</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Divide zero\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">/</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a / b = \"</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">finally</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"End\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 调用 resolve 代表一切正常，reject 是出现异常时所调用的</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Promise 类有 .then () .catch () 和 .finally () 三个方法，这三个方法的参数都是一个函数，.then () 可以将参数中的函数添加到当前 Promise 的正常执行序列，.catch () 则是设定 Promise 的异常处理序列，.finally () 是在 Promise 执行的最后一定会执行的序列。 .then () 传入的函数会按顺序依次执行，有任何异常都会直接跳到 catch 序列</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>*/</span></pre></td></tr></table></figure><ul>\n<li>resolve 和 reject 的作用域只有起始函数，不包括 then 以及其他序列；</li>\n<li>resolve 和 reject 并不能够使起始函数停止运行，别忘了 return。</li>\n</ul>\n<p>Promise 对象代表一个异步操作，有三种状态：Pending（进行中）、Resolved（已完成，又称 Fulfilled）和 Rejected（已失败）。</p>\n<p>回调里的 <strong>resolve(data)</strong> 将这个 promise 标记为 <strong>resolverd</strong>，然后进行下一步 <strong>then((data)=&gt;{//do something})</strong>，resolve 里的参数就是你要传入 then 的数据。</p>\n",
            "tags": [
                "语言",
                "JavaScript",
                "JavaScript"
            ]
        },
        {
            "id": "http://example.com/language/Python%E8%87%AA%E5%8A%A8%E5%8C%96/",
            "url": "http://example.com/language/Python%E8%87%AA%E5%8A%A8%E5%8C%96/",
            "title": "",
            "date_published": "2022-09-22T00:44:59.790Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "http://example.com/language/Python-Turtle%E7%BB%98%E5%9B%BE/",
            "url": "http://example.com/language/Python-Turtle%E7%BB%98%E5%9B%BE/",
            "title": "Turtle绘图",
            "date_published": "2022-09-22T00:44:33.366Z",
            "content_html": "",
            "tags": [
                "语言",
                "Python",
                "Python"
            ]
        },
        {
            "id": "http://example.com/language/Python-Django%E6%A1%86%E6%9E%B6/",
            "url": "http://example.com/language/Python-Django%E6%A1%86%E6%9E%B6/",
            "title": "Django框架",
            "date_published": "2022-09-22T00:44:05.707Z",
            "content_html": "<h1 id=\"简单使用\"><a class=\"markdownIt-Anchor\" href=\"#简单使用\">#</a> 简单使用</h1>\n<h2 id=\"django特点\"><a class=\"markdownIt-Anchor\" href=\"#django特点\">#</a> Django 特点</h2>\n<ul>\n<li>完全免费并开源源代码</li>\n<li>快速高效开发</li>\n<li>使用 MTV 架构 (熟悉 Web 开发的应该会说是 MVC 架构)</li>\n<li>强大的可扩展性.</li>\n</ul>\n<p><img data-src=\"http://www.w3cschool.cn/attachments/image/wk/djangosetupblog/57.png\" alt=\"工作方式\"></p>\n<h3 id=\"django版本支持\"><a class=\"markdownIt-Anchor\" href=\"#django版本支持\">#</a> Django 版本支持</h3>\n<table>\n<thead>\n<tr>\n<th><strong>Django 版本</strong></th>\n<th><strong>Python 版本</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1.5</td>\n<td>2.6.5, 2.7, 3.2, 3.3.</td>\n</tr>\n<tr>\n<td>1.6</td>\n<td>2.6, 2.7, 3.2, 3.3</td>\n</tr>\n<tr>\n<td>1.7</td>\n<td>2.7, 3.2, 3.3, 3.4 （2.6 不支持了）</td>\n</tr>\n<tr>\n<td>1.8 LTS</td>\n<td>2.7, 3.2, 3.3, 3.4, 3.5 （长期支持版本 LTS)</td>\n</tr>\n<tr>\n<td>1.9</td>\n<td>2.7, 3.4, 3.5 （3.3 不支持了）</td>\n</tr>\n<tr>\n<td>1.10</td>\n<td>2.7, 3.4, 3.5</td>\n</tr>\n<tr>\n<td>1.11 LTS</td>\n<td>2.7, 3.4, 3.5, 3.6 （最后一个支持 Python 2.7 的版本 ）</td>\n</tr>\n<tr>\n<td>2.0</td>\n<td>3.4, 3.5, 3.6 （注意，不再支持 Python 2）</td>\n</tr>\n<tr>\n<td>2.1</td>\n<td>3.5, 3.6, 3.7</td>\n</tr>\n<tr>\n<td>2.2 LTS</td>\n<td>3.5, 3.6, 3.7</td>\n</tr>\n<tr>\n<td>3.0</td>\n<td>3.6, 3.7, 3.8</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"django-架构分析\"><a class=\"markdownIt-Anchor\" href=\"#django-架构分析\">#</a> Django 架构分析</h3>\n<p><img data-src=\"https://atts.w3cschool.cn/attachments/image/20200611/1591867104705969.jpeg\" alt=\"img\"></p>\n<h3 id=\"django框架组成\"><a class=\"markdownIt-Anchor\" href=\"#django框架组成\">#</a> Django 框架组成</h3>\n<p>核心部分：</p>\n<ul>\n<li>一个面向对象的映射器</li>\n<li>一个基于正则的 url 分发器</li>\n<li>一个视图系统</li>\n<li>一个模板系统</li>\n</ul>\n<p>核心框架还包括：</p>\n<ul>\n<li>一个轻量级的，独立的 Web 服务器，用于开发和测试</li>\n<li>一个表单序列化及验证系统，用于 HTML 表单和适合数据库存储之间的数据转化</li>\n<li>一个缓存框架</li>\n<li>中间件支持，允许对请求处理的各个阶段进行干涉</li>\n<li>内置的分发系统允许应用程序中的组件采用预定义的信号进行相互间的通信</li>\n<li>一个序列化系统，能够生成或读取采用 XML 或 JSON 表示的 Django 模型实例</li>\n<li>一个用于扩展模板引擎的能力的系统</li>\n</ul>\n<p>Django 包含了很多应用在它的  <code>contrib</code>  包中，这些包括：</p>\n<ul>\n<li>一个可扩展的认证系统</li>\n<li>动态站点管理页面</li>\n<li>一组产生 RSS 和 Atom 的工具</li>\n<li>一个灵活的评论系统</li>\n<li>产生 Google 站点地图（Google Sitemaps）的工具</li>\n<li>防止跨站请求伪造（cross-site request forgery）的工具</li>\n<li>一套支持轻量级标记语言（Textile 和 Markdown）的模板库</li>\n<li>一套协助创建地理信息系统（GIS）的基础框架</li>\n</ul>\n<h3 id=\"django-的优缺点总结\"><a class=\"markdownIt-Anchor\" href=\"#django-的优缺点总结\">#</a> Django 的优缺点总结</h3>\n<h4 id=\"django-的优点\"><a class=\"markdownIt-Anchor\" href=\"#django-的优点\">#</a> Django 的优点</h4>\n<ul>\n<li>强大的 URL 路由配置，Django 让你可以设计出非常优雅的 URL。</li>\n<li>自助管理后台，让你几乎不用写一行代码就拥有一个完整的后台管理界面。</li>\n<li>全套的解决方案（full-stackframework + batteries included），基本要什么有什么（比如：cache、session、feed、orm、geo、auth），而且全部 Django 自己造，开发网站应手的工具 Django 基本都给你做好了，因此开发效率是不用说的。</li>\n</ul>\n<h4 id=\"django-的缺点\"><a class=\"markdownIt-Anchor\" href=\"#django-的缺点\">#</a> Django 的缺点</h4>\n<ul>\n<li>Template 功能比较弱，不能插入 Python 代码，要写复杂一点的逻辑需要另外用 Python 实现 Tag 或 Filter。</li>\n<li>URL 配置虽然强大，但全部要手写，高手和初识 Django 的人配出来的 URL 会有很大差异。</li>\n<li>自带的 ORM 远不如 SQLAlchemy 强大，SQLAlchemy 是 Python 世界里事实上的 ORM 标准，其它框架都支持 SQLAlchemy 了，唯独 Django 仍然坚持自己的那一套。</li>\n<li>Django 的 auth 跟其它模块结合紧密，功能也挺强，但做的有点过了，用户的数据库 schema 都给你定好了，比如很多网站要求 email 地址唯一，可 schema 里这个字段的值不是唯一的。</li>\n<li>系统紧耦合，如果你觉得 Django 内置的某项功能不是很好，想用喜欢的第三方库来代替是很难的，比如说的 ORM、Template。要在 Django 里用 SQLAlchemy 或 Mako 几乎是不可能，即使打了一些补丁用上了也会让你觉得非常非常别扭。</li>\n</ul>\n<h2 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h2>\n<pre><code>pip install django==3.2\n</code></pre>\n<h2 id=\"django-创建第一个项目\"><a class=\"markdownIt-Anchor\" href=\"#django-创建第一个项目\">#</a> Django 创建第一个项目</h2>\n<p>本章我们将介绍如何使用 Django 来创建项目。</p>\n<p>使用 <span class=\"exturl\" data-url=\"aHR0cDovL2RqYW5nby1hZG1pbi5weQ==\">django-admin.py</span> 来创建名为 *** 的项目：</p>\n<pre><code>  django-admin startproject xxx\n</code></pre>\n<p>创建完成后我们可以查看下项目的目录结构：</p>\n<pre><code>[root@solar ~]# cd HelloWorld/\n[root@solar HelloWorld]# tree\n. manage.py 管理器\n|--*** \n|   |-- __init__.py 包\n|   |-- settings.py  设置文件\n|   |-- urls.py   路由\n|   `-- wsgi.py   部署\n</code></pre>\n<p>目录说明：</p>\n<ul>\n<li><strong>HelloWorld:</strong> 项目的容器。</li>\n<li><strong><span class=\"exturl\" data-url=\"aHR0cDovL21hbmFnZS5weQ==\">manage.py</span>:</strong> 一个实用的命令行工具，可让你以各种方式与该 Django 项目进行交互。</li>\n<li><strong>HelloWorld/<strong>init</strong>.py:</strong> 一个空文件，告诉 Python 该目录是一个 Python 包。</li>\n<li><strong>HelloWorld/settings.py:</strong> 该 Django 项目的设置 / 配置。</li>\n<li><strong>HelloWorld/urls.py:</strong> 该 Django 项目的 URL 声明；一份由 Django 驱动的网站 &quot;目录&quot;。</li>\n<li><strong>HelloWorld/wsgi.py:</strong> 一个 WSGI 兼容的 Web 服务器的入口，以便运行你的项目。</li>\n</ul>\n<p>创建一个 app 模块会自动生成 app 文件夹，该文件夹包括几个文件：</p>\n<pre><code>python manage.py startapp app\n</code></pre>\n<p>各个目录的说明：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2luaXQucHk=\">init.py</span> 包</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2FkbWluLnB5\">admin.py</span> 管理后台</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2FwcHMucHk=\">apps.py</span></li>\n<li>migrations</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2luaXQucHk=\">init.py</span> 迁移</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL21vZGVsLnB5\">model.py</span> 模型</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3Rlc3QucHk=\">test.py</span> 测试</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3ZpZXcucHk=\">view.py</span> 视图</li>\n</ul>\n<p>在目录中找到 ***<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1zZXR0aW5nLXU3MWxmMjV4bzl3Y3AzbS5weQ==\"> 包里面的 setting.py</span>，在 INSTALLED_APPS 当中注册 APP 模块：</p>\n<pre><code>INSTALLED_APPS = [    'django.contrib.admin',    'django.contrib.auth',    'django.contrib.contenttypes',    'django.contrib.sessions',    'django.contrib.messages',    'django.contrib.staticfiles',    'app',\n</code></pre>\n<p>在包下输入命令，启动项目：</p>\n<pre><code>python manage.py runserver\n</code></pre>\n",
            "tags": [
                "语言",
                "Python",
                "Python"
            ]
        },
        {
            "id": "http://example.com/language/Python-Flask%E5%BB%BA%E7%AB%99%E6%A1%86%E6%9E%B6/",
            "url": "http://example.com/language/Python-Flask%E5%BB%BA%E7%AB%99%E6%A1%86%E6%9E%B6/",
            "title": "Flask框架",
            "date_published": "2022-09-22T00:42:03.953Z",
            "content_html": "",
            "tags": [
                "语言",
                "Python",
                "Python"
            ]
        },
        {
            "id": "http://example.com/language/Python%E9%9D%99%E6%80%81%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/",
            "url": "http://example.com/language/Python%E9%9D%99%E6%80%81%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/",
            "title": "网络爬虫",
            "date_published": "2022-09-19T01:47:25.379Z",
            "content_html": "<h2 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token list punctuation\">1.</span> 5个网站，3个从业方向（python、java、Go），每个方向需要看100份招聘信息</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>希望写一个程序，可以帮助人类浏览网页并且从网页中抽取所需要的数据</pre></td></tr></table></figure><h2 id=\"爬虫是什么\"><a class=\"markdownIt-Anchor\" href=\"#爬虫是什么\">#</a> 爬虫是什么？</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>爬虫就是一段可以自动化的从互联网上获取大量数据的一段程序</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>自动化：自己运行</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>互联网：云</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>大量数据：千万级以上的数据才能称为大量</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>爬虫：网络蜘蛛、spider、网络机器人</pre></td></tr></table></figure><h2 id=\"为什么需要爬虫\"><a class=\"markdownIt-Anchor\" href=\"#为什么需要爬虫\">#</a> 为什么需要爬虫</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token list punctuation\">1.</span> 为了自动化的获取数据：减少人力</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token list punctuation\">2.</span> 解决大数据的数据源的问题</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token list punctuation\">3.</span> 数据分析与数据挖掘的数据源</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token list punctuation\">4.</span> 搜索引擎：百度、谷歌、搜狗、搜狐、360、bing、火狐</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t谷歌、bing、百度</pre></td></tr></table></figure><h2 id=\"爬虫的类型\"><a class=\"markdownIt-Anchor\" href=\"#爬虫的类型\">#</a> 爬虫的类型</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token list punctuation\">1.</span> 通用爬虫</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t搜索引擎</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t尽可能多的在互联网上爬取高质量网页</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t优点：数据量大并且全</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t缺点：硬件成本高(大公司才有能力做)，有价值的数据较少。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token list punctuation\">2.</span> 聚焦爬虫</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t也称之为主题爬虫（最常用的爬虫）</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t要按照预先设定好的主题，有选择性的进行网页爬取（只针对其中某几个有用的信息进行数据获取）</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t主要用于对特定信息的获取</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t优点：数据价值相对较高，节省资源</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t缺点：限制性较大，通用性较差</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token list punctuation\">3.</span> 增量式爬虫</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t是一种特殊的聚焦爬虫，只不过只采集更新后的数据</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t只捕捉更新后的页面（定时、定量）</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token list punctuation\">4.</span> 深层网络爬虫</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t抓取互联网中更深层的页面</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t可能会隐藏在表单之下，不能通过静态链接直接获取。</pre></td></tr></table></figure><h2 id=\"君子协议\"><a class=\"markdownIt-Anchor\" href=\"#君子协议\">#</a> 君子协议</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token list punctuation\">1.</span> 在网站的根目录下，放置一个robots.txt文件，在文件中，规定了爬虫可以采集哪些数据，不能采集那些数据</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t注意：君子协议，从技术上不做限制，如果不遵守君子协议，采集的数据如果用于商用，并且是竞品，做好被告的准备。如果没有君子协议，默认可以全部采集，尽量不要用于商用。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token list punctuation\">2.</span> sitemap网站地图</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t为了让搜索引擎可以更快的更优先的收录自己的网站</pre></td></tr></table></figure><h2 id=\"爬虫的原理\"><a class=\"markdownIt-Anchor\" href=\"#爬虫的原理\">#</a> 爬虫的原理</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>请求与响应</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>一切以数据为导向</pre></td></tr></table></figure><h2 id=\"http请求\"><a class=\"markdownIt-Anchor\" href=\"#http请求\">#</a> HTTP 请求</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token list punctuation\">1.</span> HTTP协议(HyperText Transfer Protocal)超文本传输协议</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token list punctuation\">1.</span> 是用于WWW服务器传输文本到本地浏览器的一个传输协议（只有拥有该协议才允许网络传输）</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token list punctuation\">2.</span> 可以让传输更加高效，还让浏览器更加高效</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token list punctuation\">3.</span> 爬虫主要就是和HTTP打交道</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token list punctuation\">2.</span> HTTPS协议：超文本传输加密协议</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tSSL证书</pre></td></tr></table></figure><ul>\n<li>HTTP 主要的请求方式</li>\n</ul>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token list punctuation\">1.</span> GET请求：向服务器请求资源</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token list punctuation\">1.</span> get请求可以携带数据区（有长度限制）</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token list punctuation\">2.</span> 明文请求</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token list punctuation\">3.</span> 不安全</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token list punctuation\">4.</span> 效率相对较高</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token list punctuation\">5.</span> 不携带数据或者携带的数据不敏感的情况下使用get</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token list punctuation\">2.</span> POST请求：向服务器请求资源</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token list punctuation\">1.</span> 可以携带数据区(没有限制)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token list punctuation\">2.</span> 密文的请求（加密）</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token list punctuation\">3.</span> 安全</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token list punctuation\">4.</span> 效率低</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token list punctuation\">5.</span> 携带敏感数据的时候一般用post</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>权限不开放：</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token list punctuation\">3.</span> PUT请求：请求服务器来存储一个资源，通常要指定存储的位置</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token list punctuation\">4.</span> DELETE请求：请求服务器来删除一个资源</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token list punctuation\">5.</span> HEAD请求：请求获取HTTP请求头信息</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token list punctuation\">6.</span> OPTIONS请求：获得当前的URL所支持的请求类型</pre></td></tr></table></figure><h2 id=\"请求头\"><a class=\"markdownIt-Anchor\" href=\"#请求头\">#</a> 请求头</h2>\n<h3 id=\"user-agent\"><a class=\"markdownIt-Anchor\" href=\"#user-agent\">#</a> User-Agent</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>浏览器信息（操作系统信息，浏览器型号，版本号）</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>相当于自报家门</pre></td></tr></table></figure><h3 id=\"headers\"><a class=\"markdownIt-Anchor\" href=\"#headers\">#</a> Headers</h3>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>构建一个Request对象，将headers以字典的方式传入</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>request <span class=\"token operator\">=</span> Request<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span><span class=\"token string\">'http://httpbin.org/headers'</span><span class=\"token punctuation\">,</span>headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"cookies\"><a class=\"markdownIt-Anchor\" href=\"#cookies\">#</a> Cookies</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>req <span class=\"token operator\">=</span> Request<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span><span class=\"token string\">'http://httpbin.org/headers'</span><span class=\"token punctuation\">,</span>headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>res <span class=\"token operator\">=</span> urlopen<span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>timeout 设置和异常处理</li>\n</ul>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token list punctuation\">1.</span> 访问一个网站的时候，可能会长时间不响应</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token list punctuation\">1.</span> 链接失效</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token list punctuation\">2.</span> 服务器问题</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token list punctuation\">3.</span> 链接是错误链接</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token list punctuation\">4.</span> 网不好</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token list punctuation\">2.</span> 以上所有情况，该链接均属于无效链接</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token list punctuation\">1.</span> 占用访问资源的时间过长</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token list punctuation\">2.</span> 爬虫爬取的数据量：10W~10亿</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token list punctuation\">3.</span> 策略：</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t\t设置超时的时间</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token list punctuation\">3.</span> timeout需要搭配try语句使用</pre></td></tr></table></figure><h2 id=\"xpath\"><a class=\"markdownIt-Anchor\" href=\"#xpath\">#</a> xpath</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>隶属于一个第三方库</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pip install lxml</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//:选择当前目录下所有的标签</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>/：选择当前对象下的一层的标签</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>@属性名字：获取属性值</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>[]：筛选元素</pre></td></tr></table></figure><h2 id=\"ip代理池\"><a class=\"markdownIt-Anchor\" href=\"#ip代理池\">#</a> IP 代理池</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>属性</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tIP数</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tIP容器</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t阈值</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>方法</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token list punctuation\">1.</span> 爬取IP</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token list punctuation\">2.</span> 检测IP数量</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t更新IP数</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token list punctuation\">3.</span> 检测IP可用</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token list punctuation\">4.</span> 删除IP</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token list punctuation\">5.</span> 添加IP</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token list punctuation\">6.</span> 取用IP</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t按顺序每次取不同的IP</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tyield</pre></td></tr></table></figure><h2 id=\"requests请求库\"><a class=\"markdownIt-Anchor\" href=\"#requests请求库\">#</a> requests 请求库</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token list punctuation\">1.</span> 基于urllib编写的HTTP请求库</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\tRequests的底层用urllib实现的</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token list punctuation\">2.</span> 更加具有python的风格，操作更加的人性化</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token list punctuation\">3.</span> 爬虫的最常用的方式</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token list punctuation\">4.</span> urllib的效率比requests更高</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token list punctuation\">5.</span> requests是一个第三方模块</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tpip install requests</pre></td></tr></table></figure><h2 id=\"验证码识别\"><a class=\"markdownIt-Anchor\" href=\"#验证码识别\">#</a> 验证码识别</h2>\n<blockquote>\n<p>使用超级鹰</p>\n</blockquote>\n<h2 id=\"selenium模块\"><a class=\"markdownIt-Anchor\" href=\"#selenium模块\">#</a> selenium 模块</h2>\n<p><em>便捷的获取网站中的动态数据，便捷地实现模拟登录，是一个基于浏览器自动化的模块</em></p>\n<h3 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\">#</a> 使用</h3>\n<ul>\n<li><code>pip install selenium</code></li>\n<li>下载要模拟浏览器的驱动程序</li>\n<li>实例化浏览器对象，</li>\n<li>自动化</li>\n</ul>\n<h3 id=\"处理滚动条\"><a class=\"markdownIt-Anchor\" href=\"#处理滚动条\">#</a> 处理滚动条</h3>\n<p>方法一：使用 <code>scrollTo()</code>  方法</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>js <span class=\"token operator\">=</span> <span class=\"token string\">\"window.scrollTo(0,document.body.scrollHeight)\"</span>  <span class=\"token comment\"># 设置浏览器窗口的滚动条位置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>chrome<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span>js<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 通过执行 JavaScript 代码来移动滚动条位置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>js <span class=\"token operator\">=</span> <span class=\"token string\">\"window.scrollTo(0,0)\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>chrome<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span>js<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"将实例化的浏览器窗口隐藏\"><a class=\"markdownIt-Anchor\" href=\"#将实例化的浏览器窗口隐藏\">#</a> 将实例化的浏览器窗口隐藏</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>chrome<span class=\"token punctuation\">.</span>options <span class=\"token keyword\">import</span> Options</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_null_head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"将浏览器设置为无显示的\"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    chrome_options <span class=\"token operator\">=</span> Options<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    chrome_options<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--headless'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    chrome_options<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--disable-gpu'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>executable_path<span class=\"token operator\">=</span><span class=\"token string\">'chromedriver'</span><span class=\"token punctuation\">,</span> chrome_options<span class=\"token operator\">=</span>chrome_options<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"防止使用selenium被检测规避风险\"><a class=\"markdownIt-Anchor\" href=\"#防止使用selenium被检测规避风险\">#</a> 防止使用 selenium 被检测，规避风险</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_null_head</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"将浏览器设置为无显示的\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    chrome_options <span class=\"token operator\">=</span> Options<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    chrome_options<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--headless'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    chrome_options<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--disable-gpu'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    option <span class=\"token operator\">=</span> get_risks<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>executable_path<span class=\"token operator\">=</span><span class=\"token string\">'chromedriver'</span><span class=\"token punctuation\">,</span> chrome_options<span class=\"token operator\">=</span>chrome_options<span class=\"token punctuation\">,</span>options<span class=\"token operator\">=</span>option<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_risks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"设置规避风险\"\"\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    option <span class=\"token operator\">=</span> ChromeOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    option<span class=\"token punctuation\">.</span>add_experimental_option<span class=\"token punctuation\">(</span><span class=\"token string\">'excludeSwitches'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'enable-automation'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> option</pre></td></tr></table></figure><h2 id=\"scrapy框架\"><a class=\"markdownIt-Anchor\" href=\"#scrapy框架\">#</a> scrapy 框架</h2>\n<p><em>爬虫中封装好的框架，便于开发</em></p>\n<p>封装的模块：</p>\n<ul>\n<li>高性能的持久化操作</li>\n<li>异步的数据下载操作</li>\n<li>高性能的数据解析操作</li>\n<li>分布式</li>\n</ul>\n<blockquote>\n<p>下载： <code>pip install scrapy</code></p>\n</blockquote>\n<p><img data-src=\"https://www.runoob.com/wp-content/uploads/2018/10/8c591d54457bb033812a2b0364011e9c_articlex.png\" alt=\"img\"></p>\n<ul>\n<li><strong>Scrapy Engine (引擎)</strong>: 负责 Spider、ItemPipeline、Downloader、Scheduler 中间的通讯，信号、数据传递等。</li>\n<li><strong>Scheduler (调度器)</strong>: 它负责接受引擎发送过来的 Request 请求，并按照一定的方式进行整理排列，入队，当引擎需要时，交还给引擎。</li>\n<li><strong>Downloader（下载器）</strong>：负责下载 Scrapy Engine (引擎) 发送的所有 Requests 请求，并将其获取到的 Responses 交还给 Scrapy Engine (引擎)，由引擎交给 Spider 来处理，</li>\n<li><strong>Spider（爬虫）</strong>：它负责处理所有 Responses, 从中分析提取数据，获取 Item 字段需要的数据，并将需要跟进的 URL 提交给引擎，再次进入 Scheduler (调度器).</li>\n<li><strong>Item Pipeline (管道)</strong>：它负责处理 Spider 中获取到的 Item，并进行进行后期处理（详细分析、过滤、存储等）的地方。</li>\n<li><strong>Downloader Middlewares（下载中间件）</strong>：你可以当作是一个可以自定义扩展下载功能的组件。</li>\n<li><strong>Spider Middlewares（Spider 中间件）</strong>：你可以理解为是一个可以自定扩展和操作引擎和 Spider 中间通信的功能组件（比如进入 Spider 的 Responses; 和从 Spider 出去的 Requests）</li>\n</ul>\n<h3 id=\"创建项目\"><a class=\"markdownIt-Anchor\" href=\"#创建项目\">#</a> 创建项目</h3>\n<ul>\n<li>新建目标： <code>scrapy startproject xxx</code></li>\n<li>明确目标：<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1pdGVtcy1ieTVoODAzeS5weQ==\">编写 items.py</span></li>\n<li>制作爬虫：spiders/xxspider.py</li>\n<li>存储内容：设计管道存储爬取内容</li>\n</ul>\n",
            "tags": [
                "语言",
                "Python",
                "Python"
            ]
        }
    ]
}